{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/teams/Players.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Players({\n  teamName\n}) {\n  _s();\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n    async function fetchPlayers() {\n      try {\n        const res = await axios.get(`/api/series/${seriesId}/matches`);\n        const matches = res.data.data || [];\n        const seenTeams = new Map();\n        for (const match of matches) {\n          const seasonId = match.season_id;\n          const teamsToFetch = [match.localteam, match.visitorteam];\n          for (const team of teamsToFetch) {\n            if (!seenTeams.has(team.id)) {\n              try {\n                const playersRes = await axios.get(`/api/teams/${team.id}/squad/${seasonId}`);\n                seenTeams.set(team.id, {\n                  ...team,\n                  player: playersRes.data.data || []\n                });\n              } catch (err) {\n                console.error(`Failed fetching player for ${team.name}`, err);\n                seenTeams.set(team.id, {\n                  ...team,\n                  player: []\n                });\n              }\n            }\n          }\n        }\n        if (isMounted) {\n          setTeams(Array.from(seenTeams.values()));\n        }\n      } catch (err) {\n        console.error('Error loading team players', err);\n      }\n    }\n    fetchPlayers();\n    return () => {\n      isMounted = false;\n    };\n  }, [teamName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: teams.map(team => {\n      var _team$squad$squad;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), (_team$squad$squad = team.squad.squad) === null || _team$squad$squad === void 0 ? void 0 : _team$squad$squad.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u2013 \", player.fullname]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, team.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Players, \"nt+I693XwTdNiKlXHWfWa22BjIk=\");\n_c = Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Players","teamName","_s","teams","setTeams","isMounted","fetchPlayers","res","get","seriesId","matches","data","seenTeams","Map","match","seasonId","season_id","teamsToFetch","localteam","visitorteam","team","has","id","playersRes","set","player","err","console","error","name","Array","from","values","children","map","_team$squad$squad","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","squad","fullname","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/teams/Players.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function Players({ teamName }) {\n  const [teams, setTeams] = useState([]);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    async function fetchPlayers() {\n      try {\n        const res = await axios.get(`/api/series/${seriesId}/matches`);\n        const matches = res.data.data || [];\n\n        const seenTeams = new Map();\n\n        for (const match of matches) {\n          const seasonId = match.season_id;\n          const teamsToFetch = [match.localteam, match.visitorteam];\n\n          for (const team of teamsToFetch) {\n            if (!seenTeams.has(team.id)) {\n              try {\n                const playersRes = await axios.get(`/api/teams/${team.id}/squad/${seasonId}`);\n                seenTeams.set(team.id, {\n                  ...team,\n                  player: playersRes.data.data || [],\n                });\n              } catch (err) {\n                console.error(`Failed fetching player for ${team.name}`, err);\n                seenTeams.set(team.id, {\n                  ...team,\n                  player: [],\n                });\n              }\n            }\n          }\n        }\n\n        if (isMounted) {\n          setTeams(Array.from(seenTeams.values()));\n        }\n      } catch (err) {\n        console.error('Error loading team players', err);\n      }\n    }\n\n    fetchPlayers();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [teamName]);\n\n  return (\n    <div>\n      {teams.map((team) => (\n        <div key={team.id} style={{ marginBottom: '20px' }}>\n          <h4>{team.name}</h4>\n          {team.squad.squad?.map((player) => (\n            <div key={player.id}>â€“ {player.fullname}</div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}