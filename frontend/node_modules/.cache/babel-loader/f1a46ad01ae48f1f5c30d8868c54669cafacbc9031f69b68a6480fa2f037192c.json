{"ast":null,"code":"var _jsxFileName = \"/Users/diya-ashwinr/Downloads/cricket-website/frontend/src/components/TeamSeries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './TeamSeries.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamSeries = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    teamName\n  } = useParams();\n  const [seriesList, setSeriesList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('upcoming');\n  const now = new Date();\n  useEffect(() => {\n    const fetchSeries = async () => {\n      try {\n        const res = await fetch(`/api/series?search=${encodeURIComponent(teamName)}`);\n        const json = await res.json();\n        setSeriesList(json.data || []);\n      } catch (err) {\n        console.error('Error fetching series:', err);\n        setSeriesList([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSeries();\n  }, [teamName]);\n  const getOrdinal = n => {\n    const s = [\"th\", \"st\", \"nd\", \"rd\"],\n      v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  };\n  const formatFullDate = (input, fallbackYear = null, startMonth = null) => {\n    if (!input) return 'Invalid date';\n    let date;\n    if (/^\\d{4}-\\d{2}-\\d{2}$/.test(input)) {\n      date = new Date(input);\n    } else if (/^[A-Za-z]{3,9} \\d{1,2}$/.test(input) && fallbackYear !== null) {\n      const tempDate = new Date(`${input} ${fallbackYear}`);\n      const endMonth = tempDate.getMonth();\n      const adjustedYear = startMonth !== null && endMonth < startMonth ? fallbackYear + 1 : fallbackYear;\n      date = new Date(`${input} ${adjustedYear}`);\n    } else {\n      date = new Date(input);\n    }\n    if (isNaN(date)) return 'Invalid date';\n    const day = getOrdinal(date.getDate());\n    const month = date.toLocaleString('default', {\n      month: 'long'\n    });\n    const year = date.getFullYear();\n    return `${month} ${day}, ${year}`;\n  };\n  const upcomingSeries = seriesList.filter(s => new Date(s.startDate) > now);\n  const liveSeries = seriesList.filter(s => new Date(s.startDate) <= now && new Date(s.endDate || s.startDate) >= now);\n  const completedSeries = seriesList.filter(s => new Date(s.endDate || s.startDate) < now);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-series-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83D\\uDCC5 \", teamName, \" Cricket Team\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading series...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : seriesList.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No series or matches found for \", teamName, \" team.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"series-grid\",\n      children: seriesList.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"series-card\",\n        onClick: () => window.location.href = `/series/${s.id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: s.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start Date - \", formatFullDate(s.startDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"End Date - \", formatFullDate(s.endDate, new Date(s.startDate).getFullYear(), new Date(s.startDate).getMonth())]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"TEST - \", s.test, \", ODI - \", s.odi, \", T20 - \", s.t20]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Matches - \", (s.test || 0) + (s.odi || 0) + (s.t20 || 0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, s.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamSeries, \"unn3EjCGwdhV93hWLn2GJ1ffPGM=\", false, function () {\n  return [useParams, useParams];\n});\n_c = TeamSeries;\nexport default TeamSeries;\nvar _c;\n$RefreshReg$(_c, \"TeamSeries\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","jsxDEV","_jsxDEV","TeamSeries","_s","id","teamName","seriesList","setSeriesList","loading","setLoading","activeTab","setActiveTab","now","Date","fetchSeries","res","fetch","encodeURIComponent","json","data","err","console","error","getOrdinal","n","s","v","formatFullDate","input","fallbackYear","startMonth","date","test","tempDate","endMonth","getMonth","adjustedYear","isNaN","day","getDate","month","toLocaleString","year","getFullYear","upcomingSeries","filter","startDate","liveSeries","endDate","completedSeries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","window","location","href","name","odi","t20","_c","$RefreshReg$"],"sources":["/Users/diya-ashwinr/Downloads/cricket-website/frontend/src/components/TeamSeries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './TeamSeries.css';\n\nconst TeamSeries = () => {\n  const { id } = useParams();\n  const { teamName } = useParams();\n  const [seriesList, setSeriesList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('upcoming');\n  const now = new Date();\n\n  useEffect(() => {\n    const fetchSeries = async () => {\n      try {\n        const res = await fetch(`/api/series?search=${encodeURIComponent(teamName)}`);\n        const json = await res.json();\n        setSeriesList(json.data || []);\n      } catch (err) {\n        console.error('Error fetching series:', err);\n        setSeriesList([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSeries();\n  }, [teamName]);\n\n  const getOrdinal = (n) => {\n    const s = [\"th\", \"st\", \"nd\", \"rd\"],\n      v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  };\n\n  const formatFullDate = (input, fallbackYear = null, startMonth = null) => {\n    if (!input) return 'Invalid date';\n\n    let date;\n\n    if (/^\\d{4}-\\d{2}-\\d{2}$/.test(input)) {\n      date = new Date(input);\n    } else if (/^[A-Za-z]{3,9} \\d{1,2}$/.test(input) && fallbackYear !== null) {\n      const tempDate = new Date(`${input} ${fallbackYear}`);\n      const endMonth = tempDate.getMonth();\n      const adjustedYear = (startMonth !== null && endMonth < startMonth) ? fallbackYear + 1 : fallbackYear;\n      date = new Date(`${input} ${adjustedYear}`);\n    } else {\n      date = new Date(input);\n    }\n\n    if (isNaN(date)) return 'Invalid date';\n\n    const day = getOrdinal(date.getDate());\n    const month = date.toLocaleString('default', { month: 'long' });\n    const year = date.getFullYear();\n\n    return `${month} ${day}, ${year}`;\n  };\n\n  const upcomingSeries = seriesList.filter(s => new Date(s.startDate) > now);\n  const liveSeries = seriesList.filter(s =>\n    new Date(s.startDate) <= now && new Date(s.endDate || s.startDate) >= now\n  );\n  const completedSeries = seriesList.filter(s => new Date(s.endDate || s.startDate) < now);\n\n  return (\n    <div className=\"team-series-page\">\n      <h2>ðŸ“… {teamName} Cricket Team</h2>\n      {loading ? (\n        <p>Loading series...</p>\n      ) : seriesList.length === 0 ? (\n        <p>No series or matches found for {teamName} team.</p>\n      ) : (\n        <div className=\"series-grid\">\n          {seriesList.map((s) => (\n            <div\n              key={s.id}\n              className=\"series-card\"\n              onClick={() => window.location.href = `/series/${s.id}`}\n            >\n              <h3>{s.name}</h3>\n              <p>Start Date - {formatFullDate(s.startDate)}</p>\n              <p>End Date - {formatFullDate(s.endDate, new Date(s.startDate).getFullYear(), new Date(s.startDate).getMonth())}</p>\n              <p>TEST - {s.test}, ODI - {s.odi}, T20 - {s.t20}</p>\n              <p>Total Matches - {(s.test || 0) + (s.odi || 0) + (s.t20 || 0)}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TeamSeries;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}