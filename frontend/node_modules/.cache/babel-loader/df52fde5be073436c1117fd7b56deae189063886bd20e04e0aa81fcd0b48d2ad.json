{"ast":null,"code":"var _jsxFileName = \"/Users/diya-ashwinr/Downloads/cricket-website/frontend/src/components/TeamSeries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport Breadcrumb from './Breadcrumb';\nimport './TeamSeries.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamSeries = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    teamName\n  } = useParams();\n  const [seriesList, setSeriesList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n  const {\n    from\n  } = location.state || {};\n  const breadcrumbItems = [{\n    label: 'Home',\n    link: '/'\n  }, {\n    label: 'Teams',\n    link: '/teams'\n  }, {\n    label: teamName,\n    link: '/teams/${teamName}/series'\n  }];\n  useEffect(() => {\n    const fetchSeries = async () => {\n      try {\n        const res = await fetch(`/api/series?search=${encodeURIComponent(teamName)}`);\n        const json = await res.json();\n        setSeriesList(json.data || []);\n      } catch (err) {\n        console.error('Error fetching series:', err);\n        setSeriesList([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSeries();\n  }, [teamName]);\n  const getOrdinal = n => {\n    const s = [\"th\", \"st\", \"nd\", \"rd\"],\n      v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  };\n  const formatFullDate = (input, fallbackYear = null, startMonth = null) => {\n    if (!input) return 'Invalid date';\n    let date;\n    if (/^\\d{4}-\\d{2}-\\d{2}$/.test(input)) {\n      date = new Date(input);\n    } else if (/^[A-Za-z]{3,9} \\d{1,2}$/.test(input) && fallbackYear !== null) {\n      const tempDate = new Date(`${input} ${fallbackYear}`);\n      const endMonth = tempDate.getMonth();\n      const adjustedYear = startMonth !== null && endMonth < startMonth ? fallbackYear + 1 : fallbackYear;\n      date = new Date(`${input} ${adjustedYear}`);\n    } else {\n      date = new Date(input);\n    }\n    if (isNaN(date)) return 'Invalid date';\n    const day = getOrdinal(date.getDate());\n    const month = date.toLocaleString('default', {\n      month: 'long'\n    });\n    const year = date.getFullYear();\n    return `${month} ${day}, ${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      items: breadcrumbItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-series-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uD83D\\uDCC5 \", teamName, \" Cricket Team\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading series...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this) : seriesList.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No series found for this team.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"series-grid\",\n        children: seriesList.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"series-card\",\n          onClick: () => window.location.href = `/series/${s.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Start Date - \", formatFullDate(s.startDate)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"End Date - \", formatFullDate(s.endDate, new Date(s.startDate).getFullYear(), new Date(s.startDate).getMonth())]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"TEST - \", s.test, \", ODI - \", s.odi, \", T20 - \", s.t20]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Matches - \", (s.test || 0) + (s.odi || 0) + (s.t20 || 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamSeries, \"xGBF/u1lugMwmAy88n7sn/BkltY=\", false, function () {\n  return [useParams, useParams, useLocation];\n});\n_c = TeamSeries;\nexport default TeamSeries;\nvar _c;\n$RefreshReg$(_c, \"TeamSeries\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","Breadcrumb","jsxDEV","_jsxDEV","TeamSeries","_s","id","teamName","seriesList","setSeriesList","loading","setLoading","location","from","state","breadcrumbItems","label","link","fetchSeries","res","fetch","encodeURIComponent","json","data","err","console","error","getOrdinal","n","s","v","formatFullDate","input","fallbackYear","startMonth","date","test","Date","tempDate","endMonth","getMonth","adjustedYear","isNaN","day","getDate","month","toLocaleString","year","getFullYear","children","items","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","onClick","window","href","name","startDate","endDate","odi","t20","_c","$RefreshReg$"],"sources":["/Users/diya-ashwinr/Downloads/cricket-website/frontend/src/components/TeamSeries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport Breadcrumb from './Breadcrumb';\nimport './TeamSeries.css';\n\nconst TeamSeries = () => {\n  const { id } = useParams();\n  const { teamName } = useParams();\n  const [seriesList, setSeriesList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const location = useLocation();\n  const { from } = location.state || {};\n\n  const breadcrumbItems = [\n    { label: 'Home', link: '/' },\n    { label: 'Teams', link: '/teams' },\n    { label: teamName, link: '/teams/${teamName}/series' },\n  ];\n\n  useEffect(() => {\n    const fetchSeries = async () => {\n      try {\n        const res = await fetch(`/api/series?search=${encodeURIComponent(teamName)}`);\n        const json = await res.json();\n        setSeriesList(json.data || []);\n      } catch (err) {\n        console.error('Error fetching series:', err);\n        setSeriesList([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSeries();\n  }, [teamName]);\n\n  const getOrdinal = (n) => {\n    const s = [\"th\", \"st\", \"nd\", \"rd\"],\n      v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  };\n\n  const formatFullDate = (input, fallbackYear = null, startMonth = null) => {\n    if (!input) return 'Invalid date';\n\n    let date;\n\n    if (/^\\d{4}-\\d{2}-\\d{2}$/.test(input)) {\n      date = new Date(input);\n    } else if (/^[A-Za-z]{3,9} \\d{1,2}$/.test(input) && fallbackYear !== null) {\n      const tempDate = new Date(`${input} ${fallbackYear}`);\n      const endMonth = tempDate.getMonth();\n      const adjustedYear = (startMonth !== null && endMonth < startMonth) ? fallbackYear + 1 : fallbackYear;\n      date = new Date(`${input} ${adjustedYear}`);\n    } else {\n      date = new Date(input);\n    }\n\n    if (isNaN(date)) return 'Invalid date';\n\n    const day = getOrdinal(date.getDate());\n    const month = date.toLocaleString('default', { month: 'long' });\n    const year = date.getFullYear();\n\n    return `${month} ${day}, ${year}`;\n  };\n\n  return (\n    <div>\n      <Breadcrumb items={breadcrumbItems} />\n    <div className=\"team-series-page\">\n      <h2>ðŸ“… {teamName} Cricket Team</h2>\n      {loading ? (\n        <p>Loading series...</p>\n      ) : seriesList.length === 0 ? (\n        <p>No series found for this team.</p>\n      ) : (\n        <div className=\"series-grid\">\n          {seriesList.map((s) => (\n            <div\n              key={s.id}\n              className=\"series-card\"\n              onClick={() => window.location.href = `/series/${s.id}`}\n            >\n              <h3>{s.name}</h3>\n              <p>Start Date - {formatFullDate(s.startDate)}</p>\n              <p>End Date - {formatFullDate(s.endDate, new Date(s.startDate).getFullYear(), new Date(s.startDate).getMonth())}</p>\n              <p>TEST - {s.test}, ODI - {s.odi}, T20 - {s.t20}</p>\n              <p>Total Matches - {(s.test || 0) + (s.odi || 0) + (s.t20 || 0)}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n    </div>\n  );\n};\n\nexport default TeamSeries;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}