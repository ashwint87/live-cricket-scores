{"ast":null,"code":"var _jsxFileName = \"/Users/diya-ashwinr/Downloads/cricket-website/frontend/src/components/SeriesSquad.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './SeriesSquad.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeriesSquad = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // series ID\n  const [teamSquads, setTeamSquads] = useState({});\n  const [teamNames, setTeamNames] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchSquads = async () => {\n      try {\n        const res = await fetch(`/api/series/${id}/matches`);\n        const {\n          data: matches\n        } = await res.json();\n        const lineups = await Promise.all(matches.map(match => fetch(`/api/match/lineup/${match.id}`).then(res => res.json()).then(json => json.data)));\n        const squads = {};\n        const names = {};\n        lineups.forEach(lineup => {\n          if (!lineup) return;\n          lineup.forEach(team => {\n            if (!(team !== null && team !== void 0 && team.players) || !(team !== null && team !== void 0 && team.name)) return;\n            const teamName = team.name;\n            names[team.id] = teamName;\n            if (!squads[teamName]) squads[teamName] = new Map();\n            team.players.forEach(player => {\n              if (player.id && player.name) {\n                squads[teamName].set(player.id, player.name);\n              }\n            });\n          });\n        });\n        const finalSquads = {};\n        Object.entries(squads).forEach(([team, playerMap]) => {\n          finalSquads[team] = Array.from(playerMap.values()).sort();\n        });\n        setTeamSquads(finalSquads);\n        setTeamNames(names);\n      } catch (err) {\n        console.error('Error fetching series squads', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSquads();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"series-squad\",\n    children: \"Loading squads...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"series-squad\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCCB Series Squad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), Object.entries(teamSquads).map(([team, players]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-squad\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: team\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.map((player, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: player\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, team, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(SeriesSquad, \"UV4ZfNVvGisJAk08Wz8T33FltYE=\", false, function () {\n  return [useParams];\n});\n_c = SeriesSquad;\nexport default SeriesSquad;\nvar _c;\n$RefreshReg$(_c, \"SeriesSquad\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","SeriesSquad","_s","id","teamSquads","setTeamSquads","teamNames","setTeamNames","loading","setLoading","fetchSquads","res","fetch","data","matches","json","lineups","Promise","all","map","match","then","squads","names","forEach","lineup","team","players","name","teamName","Map","player","set","finalSquads","Object","entries","playerMap","Array","from","values","sort","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","_c","$RefreshReg$"],"sources":["/Users/diya-ashwinr/Downloads/cricket-website/frontend/src/components/SeriesSquad.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './SeriesSquad.css';\n\nconst SeriesSquad = () => {\n  const { id } = useParams(); // series ID\n  const [teamSquads, setTeamSquads] = useState({});\n  const [teamNames, setTeamNames] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchSquads = async () => {\n      try {\n        const res = await fetch(`/api/series/${id}/matches`);\n        const { data: matches } = await res.json();\n\n        const lineups = await Promise.all(\n          matches.map((match) =>\n            fetch(`/api/match/lineup/${match.id}`)\n              .then((res) => res.json())\n              .then((json) => json.data)\n          )\n        );\n\n        const squads = {};\n        const names = {};\n\n        lineups.forEach((lineup) => {\n          if (!lineup) return;\n\n          lineup.forEach((team) => {\n            if (!team?.players || !team?.name) return;\n\n            const teamName = team.name;\n            names[team.id] = teamName;\n\n            if (!squads[teamName]) squads[teamName] = new Map();\n\n            team.players.forEach((player) => {\n              if (player.id && player.name) {\n                squads[teamName].set(player.id, player.name);\n              }\n            });\n          });\n        });\n\n        const finalSquads = {};\n        Object.entries(squads).forEach(([team, playerMap]) => {\n          finalSquads[team] = Array.from(playerMap.values()).sort();\n        });\n\n        setTeamSquads(finalSquads);\n        setTeamNames(names);\n      } catch (err) {\n        console.error('Error fetching series squads', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSquads();\n  }, [id]);\n\n  if (loading) return <div className=\"series-squad\">Loading squads...</div>;\n\n  return (\n    <div className=\"series-squad\">\n      <h2>ðŸ“‹ Series Squad</h2>\n      {Object.entries(teamSquads).map(([team, players]) => (\n        <div className=\"team-squad\" key={team}>\n          <h3>{team}</h3>\n          <ul>\n            {players.map((player, idx) => (\n              <li key={idx}>{player}</li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SeriesSquad;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}