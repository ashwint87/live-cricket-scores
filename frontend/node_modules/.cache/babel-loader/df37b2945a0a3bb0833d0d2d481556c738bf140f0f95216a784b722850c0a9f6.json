{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/match/OversSummaryTab.js\",\n  _s = $RefreshSig$();\n// src/components/OversSummaryTab.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OversSummaryTab({\n  matchId\n}) {\n  _s();\n  const [balls, setBalls] = useState([]);\n  const [innings, setInnings] = useState({});\n  useEffect(() => {\n    axios.get(`/api/match/${matchId}`).then(res => {\n      const allBalls = res.data.data.balls || [];\n\n      // Group by scoreboard (inning) → over number\n      const grouped = {};\n      allBalls.forEach(ball => {\n        const inning = ball.scoreboard || 'Inning';\n        const over = Math.floor(ball.ball);\n        if (!grouped[inning]) grouped[inning] = {};\n        if (!grouped[inning][over]) grouped[inning][over] = [];\n        grouped[inning][over].push(ball);\n      });\n      setBalls(allBalls);\n      setInnings(grouped);\n    });\n  }, [matchId]);\n  const getBallDisplay = ball => {\n    var _ball$score, _ball$score$runs, _ball$score2;\n    const name = (ball === null || ball === void 0 ? void 0 : (_ball$score = ball.score) === null || _ball$score === void 0 ? void 0 : _ball$score.name) || '';\n    const runs = (_ball$score$runs = ball === null || ball === void 0 ? void 0 : (_ball$score2 = ball.score) === null || _ball$score2 === void 0 ? void 0 : _ball$score2.runs) !== null && _ball$score$runs !== void 0 ? _ball$score$runs : '';\n    const dismissalsToShowAsW = [\"Clean Bowled\", \"LBW OUT\", \"Catch Out\", \"Catch Out (Sub)\", \"Stump Out\", \"Run Out\", \"Run Out + 1\", \"Run Out + 2\", \"Run Out (Subs)\", \"Retired Out\", \"Hit Wicket\", \"Absent\", \"Absent Hurt\", \"Obstructing the field Out\"];\n    if (dismissalsToShowAsW.includes(name)) return 'W';\n    if (name === \"Retired Hurt\") return 'RH';\n    if (runs === 0) return '0';\n    if (runs === 4) return '4';\n    if (runs === 6) return '6';\n    return runs.toString();\n  };\n  const getTeamName = teamId => {\n    var _data$localteam, _data$visitorteam;\n    if (teamId === data.localteam_id) return ((_data$localteam = data.localteam) === null || _data$localteam === void 0 ? void 0 : _data$localteam.name) || 'Local Team';\n    if (teamId === data.visitorteam_id) return ((_data$visitorteam = data.visitorteam) === null || _data$visitorteam === void 0 ? void 0 : _data$visitorteam.name) || 'Visitor Team';\n    return `Team ${teamId}`;\n  };\n  const getTeamIdByScoreboard = sb => {\n    const entry = batting.find(b => b.scoreboard === sb);\n    return (entry === null || entry === void 0 ? void 0 : entry.team_id) || null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overs-summary-tab\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Overs Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), Object.entries(innings).map(([inningName, overs]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: getTeamName(getTeamIdByScoreboard(inningName))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), Object.keys(overs).sort((a, b) => b - a) // Show latest over first\n      .map(over => {\n        const ballsInOver = overs[over];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Over \", over, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this), ' ', ballsInOver.map(ball => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: 6\n            },\n            children: getBallDisplay(ball)\n          }, ball.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this))]\n        }, over, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this);\n      })]\n    }, inningName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(OversSummaryTab, \"dvLjkKtSWPII6x36NRGw9KIu1eY=\");\n_c = OversSummaryTab;\nvar _c;\n$RefreshReg$(_c, \"OversSummaryTab\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OversSummaryTab","matchId","_s","balls","setBalls","innings","setInnings","get","then","res","allBalls","data","grouped","forEach","ball","inning","scoreboard","over","Math","floor","push","getBallDisplay","_ball$score","_ball$score$runs","_ball$score2","name","score","runs","dismissalsToShowAsW","includes","toString","getTeamName","teamId","_data$localteam","_data$visitorteam","localteam_id","localteam","visitorteam_id","visitorteam","getTeamIdByScoreboard","sb","entry","batting","find","b","team_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","inningName","overs","keys","sort","a","ballsInOver","style","marginBottom","marginRight","id","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/match/OversSummaryTab.js"],"sourcesContent":["// src/components/OversSummaryTab.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function OversSummaryTab({ matchId }) {\n  const [balls, setBalls] = useState([]);\n  const [innings, setInnings] = useState({});\n\n  useEffect(() => {\n    axios.get(`/api/match/${matchId}`).then((res) => {\n      const allBalls = res.data.data.balls || [];\n\n      // Group by scoreboard (inning) → over number\n      const grouped = {};\n\n      allBalls.forEach(ball => {\n        const inning = ball.scoreboard || 'Inning';\n        const over = Math.floor(ball.ball);\n\n        if (!grouped[inning]) grouped[inning] = {};\n        if (!grouped[inning][over]) grouped[inning][over] = [];\n\n        grouped[inning][over].push(ball);\n      });\n\n      setBalls(allBalls);\n      setInnings(grouped);\n    });\n  }, [matchId]);\n\n  const getBallDisplay = (ball) => {\n    const name = ball?.score?.name || '';\n    const runs = ball?.score?.runs ?? '';\n    const dismissalsToShowAsW = [\n      \"Clean Bowled\", \"LBW OUT\", \"Catch Out\", \"Catch Out (Sub)\",\n      \"Stump Out\", \"Run Out\", \"Run Out + 1\", \"Run Out + 2\",\n      \"Run Out (Subs)\", \"Retired Out\", \"Hit Wicket\", \"Absent\",\n      \"Absent Hurt\", \"Obstructing the field Out\"\n    ];\n\n    if (dismissalsToShowAsW.includes(name)) return 'W';\n    if (name === \"Retired Hurt\") return 'RH';\n    if (runs === 0) return '0';\n    if (runs === 4) return '4';\n    if (runs === 6) return '6';\n    return runs.toString();\n  };\n\n  const getTeamName = (teamId) => {\n    if (teamId === data.localteam_id) return data.localteam?.name || 'Local Team';\n    if (teamId === data.visitorteam_id) return data.visitorteam?.name || 'Visitor Team';\n    return `Team ${teamId}`;\n  };\n\n  const getTeamIdByScoreboard = (sb) => {\n    const entry = batting.find(b => b.scoreboard === sb);\n    return entry?.team_id || null;\n  };\n\n  return (\n    <div className=\"overs-summary-tab\">\n      <h3>Overs Summary</h3>\n\n      {Object.entries(innings).map(([inningName, overs]) => (\n        <div key={inningName}>\n          <h4>{getTeamName(getTeamIdByScoreboard(inningName))}</h4>\n          {Object.keys(overs)\n            .sort((a, b) => b - a) // Show latest over first\n            .map(over => {\n              const ballsInOver = overs[over];\n\n              return (\n                <div key={over} style={{ marginBottom: '10px' }}>\n                  <strong>Over {over}:</strong>{' '}\n                  {ballsInOver.map(ball => (\n                    <span key={ball.id} style={{ marginRight: 6 }}>\n                      {getBallDisplay(ball)}\n                    </span>\n                  ))}\n                </div>\n              );\n            })}\n        </div>\n      ))}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}