{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/Series.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useSeries } from './../context/SeriesContext';\nimport { FORMAT_CODES } from './../constants/matchStatusConstants';\nimport { format } from 'date-fns';\nimport './css/Series.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Series() {\n  _s();\n  const {\n    allSeries,\n    loading\n  } = useSeries();\n  const [search, setSearch] = useState('');\n  const uniqueSeriesMap = new Map();\n  allSeries.forEach(s => {\n    const baseKey = `${s.league_id}_${s.season_id}_${s.code}_${s.league}_${s.season}`;\n    const key = `${baseKey}_${s.start_date}_${s.end_date}`;\n\n    // Check if another entry with same baseKey exists whose stage_id is +1 or -1 of current\n    const existingEntry = Array.from(uniqueSeriesMap.entries()).find(([k, val]) => {\n      const [ek] = k.split(`_${val.start_date}_${val.end_date}`);\n      const isSameBase = ek === baseKey;\n      const stageMatch = Array.isArray(val.id) && Array.isArray(s.id) ? val.id.some(id1 => s.id.some(id2 => Math.abs(id1 - id2) === 1)) : Math.abs((Array.isArray(val.id) ? val.id[0] : val.id) - (Array.isArray(s.id) ? s.id[0] : s.id)) === 1;\n      return isSameBase && stageMatch;\n    });\n    if (!existingEntry) {\n      uniqueSeriesMap.set(key, s);\n    }\n  });\n  const uniqueSeries = Array.from(uniqueSeriesMap.values());\n  const filtered = uniqueSeries.filter(s => {\n    var _s$name;\n    return (_s$name = s.name) === null || _s$name === void 0 ? void 0 : _s$name.toLowerCase().includes(search.toLowerCase());\n  });\n  const seriesName = series => {\n    const code = ((series === null || series === void 0 ? void 0 : series.code) || '').toUpperCase().trim();\n    if (FORMAT_CODES.includes(code)) {\n      return `${(series === null || series === void 0 ? void 0 : series.name) || ''} ${(series === null || series === void 0 ? void 0 : series.season) || ''}`.trim();\n    } else {\n      return `${(series === null || series === void 0 ? void 0 : series.league) || ''} ${(series === null || series === void 0 ? void 0 : series.season) || ''}`.trim();\n    }\n  };\n  const formatDate = dateStr => {\n    if (!dateStr) return '';\n    const d = new Date(dateStr);\n    return format(d, 'dd MMM yyyy');\n  };\n  console.log(filtered);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"series-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search series...\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      className: \"series-search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"series-grid\",\n      children: filtered.map(series => {\n        let adjustedEndDate = new Date(series.end_date);\n        if (series.code === 'TEST' || series.code === 'TEST/5DAY') {\n          adjustedEndDate.setDate(adjustedEndDate.getDate() + 4);\n        } else if (series.code === '4DAY') {\n          adjustedEndDate.setDate(adjustedEndDate.getDate() + 3);\n        }\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/series/${series.id}/${series.season_id}`,\n          state: {\n            seriesLabel: seriesName(series),\n            seriesCode: series.code,\n            stageIds: series.stage_ids\n          },\n          className: \"series-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"series-info\",\n            children: [(series === null || series === void 0 ? void 0 : series.code) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"series-type-tag\",\n              children: series.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: seriesName(series)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, series.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Series, \"JkNflETNWaN5TK6pLBI2omDxIiI=\", false, function () {\n  return [useSeries];\n});\n_c = Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useSeries","FORMAT_CODES","format","jsxDEV","_jsxDEV","Series","_s","allSeries","loading","search","setSearch","uniqueSeriesMap","Map","forEach","s","baseKey","league_id","season_id","code","league","season","key","start_date","end_date","existingEntry","Array","from","entries","find","k","val","ek","split","isSameBase","stageMatch","isArray","id","some","id1","id2","Math","abs","set","uniqueSeries","values","filtered","filter","_s$name","name","toLowerCase","includes","seriesName","series","toUpperCase","trim","formatDate","dateStr","d","Date","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","map","adjustedEndDate","setDate","getDate","to","state","seriesLabel","seriesCode","stageIds","stage_ids","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/Series.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useSeries } from './../context/SeriesContext';\nimport { FORMAT_CODES } from './../constants/matchStatusConstants';\nimport { format } from 'date-fns';\nimport './css/Series.css';\n\nexport default function Series() {\n  const { allSeries, loading } = useSeries();\n  const [search, setSearch] = useState('');\n\n  const uniqueSeriesMap = new Map();\n\n  allSeries.forEach((s) => {\n    const baseKey = `${s.league_id}_${s.season_id}_${s.code}_${s.league}_${s.season}`;\n    const key = `${baseKey}_${s.start_date}_${s.end_date}`;\n\n    // Check if another entry with same baseKey exists whose stage_id is +1 or -1 of current\n    const existingEntry = Array.from(uniqueSeriesMap.entries()).find(([k, val]) => {\n      const [ek] = k.split(`_${val.start_date}_${val.end_date}`);\n      const isSameBase = ek === baseKey;\n      const stageMatch = Array.isArray(val.id) && Array.isArray(s.id)\n        ? val.id.some((id1) => s.id.some((id2) => Math.abs(id1 - id2) === 1))\n        : Math.abs((Array.isArray(val.id) ? val.id[0] : val.id) - (Array.isArray(s.id) ? s.id[0] : s.id)) === 1;\n\n      return isSameBase && stageMatch;\n    });\n\n    if (!existingEntry) {\n      uniqueSeriesMap.set(key, s);\n    }\n  });\n\n  const uniqueSeries = Array.from(uniqueSeriesMap.values());\n\n  const filtered = uniqueSeries.filter((s) =>\n    s.name?.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const seriesName = (series) => {\n    const code = (series?.code || '').toUpperCase().trim();\n\n    if (FORMAT_CODES.includes(code)) {\n      return `${series?.name || ''} ${series?.season || ''}`.trim();\n    } else {\n      return `${series?.league || ''} ${series?.season || ''}`.trim();\n    }\n  };\n\n  const formatDate = (dateStr) => {\n    if (!dateStr) return '';\n    const d = new Date(dateStr);\n    return format(d, 'dd MMM yyyy');\n  };\nconsole.log(filtered);\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"series-container\">\n      <h1>All Series</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search series...\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        className=\"series-search\"\n      />\n\n      <div className=\"series-grid\">\n        {filtered.map(series => {\n          let adjustedEndDate = new Date(series.end_date);\n          if (series.code === 'TEST' || series.code === 'TEST/5DAY') {\n            adjustedEndDate.setDate(adjustedEndDate.getDate() + 4);\n          } else if (series.code === '4DAY') {\n            adjustedEndDate.setDate(adjustedEndDate.getDate() + 3);\n          }\n\n          return (\n            <Link\n              key={series.id}\n              to={`/series/${series.id}/${series.season_id}`}\n              state={{\n                seriesLabel: seriesName(series),\n                seriesCode: series.code,\n                stageIds: series.stage_ids\n              }}\n              className=\"series-card\"\n            >\n              <div className=\"series-info\">\n                {series?.code && (\n                  <span className=\"series-type-tag\">{series.code}</span>\n                )}\n                <h4>{seriesName(series)}</h4>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,4BAA4B;AACtD,SAASC,YAAY,QAAQ,qCAAqC;AAClE,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;EAEjCL,SAAS,CAACM,OAAO,CAAEC,CAAC,IAAK;IACvB,MAAMC,OAAO,GAAG,GAAGD,CAAC,CAACE,SAAS,IAAIF,CAAC,CAACG,SAAS,IAAIH,CAAC,CAACI,IAAI,IAAIJ,CAAC,CAACK,MAAM,IAAIL,CAAC,CAACM,MAAM,EAAE;IACjF,MAAMC,GAAG,GAAG,GAAGN,OAAO,IAAID,CAAC,CAACQ,UAAU,IAAIR,CAAC,CAACS,QAAQ,EAAE;;IAEtD;IACA,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACf,eAAe,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,CAAC,EAAEC,GAAG,CAAC,KAAK;MAC7E,MAAM,CAACC,EAAE,CAAC,GAAGF,CAAC,CAACG,KAAK,CAAC,IAAIF,GAAG,CAACR,UAAU,IAAIQ,GAAG,CAACP,QAAQ,EAAE,CAAC;MAC1D,MAAMU,UAAU,GAAGF,EAAE,KAAKhB,OAAO;MACjC,MAAMmB,UAAU,GAAGT,KAAK,CAACU,OAAO,CAACL,GAAG,CAACM,EAAE,CAAC,IAAIX,KAAK,CAACU,OAAO,CAACrB,CAAC,CAACsB,EAAE,CAAC,GAC3DN,GAAG,CAACM,EAAE,CAACC,IAAI,CAAEC,GAAG,IAAKxB,CAAC,CAACsB,EAAE,CAACC,IAAI,CAAEE,GAAG,IAAKC,IAAI,CAACC,GAAG,CAACH,GAAG,GAAGC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GACnEC,IAAI,CAACC,GAAG,CAAC,CAAChB,KAAK,CAACU,OAAO,CAACL,GAAG,CAACM,EAAE,CAAC,GAAGN,GAAG,CAACM,EAAE,CAAC,CAAC,CAAC,GAAGN,GAAG,CAACM,EAAE,KAAKX,KAAK,CAACU,OAAO,CAACrB,CAAC,CAACsB,EAAE,CAAC,GAAGtB,CAAC,CAACsB,EAAE,CAAC,CAAC,CAAC,GAAGtB,CAAC,CAACsB,EAAE,CAAC,CAAC,KAAK,CAAC;MAEzG,OAAOH,UAAU,IAAIC,UAAU;IACjC,CAAC,CAAC;IAEF,IAAI,CAACV,aAAa,EAAE;MAClBb,eAAe,CAAC+B,GAAG,CAACrB,GAAG,EAAEP,CAAC,CAAC;IAC7B;EACF,CAAC,CAAC;EAEF,MAAM6B,YAAY,GAAGlB,KAAK,CAACC,IAAI,CAACf,eAAe,CAACiC,MAAM,CAAC,CAAC,CAAC;EAEzD,MAAMC,QAAQ,GAAGF,YAAY,CAACG,MAAM,CAAEhC,CAAC;IAAA,IAAAiC,OAAA;IAAA,QAAAA,OAAA,GACrCjC,CAAC,CAACkC,IAAI,cAAAD,OAAA,uBAANA,OAAA,CAAQE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACzC,MAAM,CAACwC,WAAW,CAAC,CAAC,CAAC;EAAA,CACtD,CAAC;EAED,MAAME,UAAU,GAAIC,MAAM,IAAK;IAC7B,MAAMlC,IAAI,GAAG,CAAC,CAAAkC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAElC,IAAI,KAAI,EAAE,EAAEmC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAEtD,IAAIrD,YAAY,CAACiD,QAAQ,CAAChC,IAAI,CAAC,EAAE;MAC/B,OAAO,GAAG,CAAAkC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEJ,IAAI,KAAI,EAAE,IAAI,CAAAI,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEhC,MAAM,KAAI,EAAE,EAAE,CAACkC,IAAI,CAAC,CAAC;IAC/D,CAAC,MAAM;MACL,OAAO,GAAG,CAAAF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEjC,MAAM,KAAI,EAAE,IAAI,CAAAiC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEhC,MAAM,KAAI,EAAE,EAAE,CAACkC,IAAI,CAAC,CAAC;IACjE;EACF,CAAC;EAED,MAAMC,UAAU,GAAIC,OAAO,IAAK;IAC9B,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;IACvB,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;IAC3B,OAAOtD,MAAM,CAACuD,CAAC,EAAE,aAAa,CAAC;EACjC,CAAC;EACHE,OAAO,CAACC,GAAG,CAACf,QAAQ,CAAC;EACnB,IAAIrC,OAAO,EAAE,oBAAOJ,OAAA;IAAAyD,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzC,oBACE7D,OAAA;IAAK8D,SAAS,EAAC,kBAAkB;IAAAL,QAAA,gBAC/BzD,OAAA;MAAAyD,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB7D,OAAA;MACE+D,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAE5D,MAAO;MACd6D,QAAQ,EAAGC,CAAC,IAAK7D,SAAS,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CH,SAAS,EAAC;IAAe;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEF7D,OAAA;MAAK8D,SAAS,EAAC,aAAa;MAAAL,QAAA,EACzBhB,QAAQ,CAAC4B,GAAG,CAACrB,MAAM,IAAI;QACtB,IAAIsB,eAAe,GAAG,IAAIhB,IAAI,CAACN,MAAM,CAAC7B,QAAQ,CAAC;QAC/C,IAAI6B,MAAM,CAAClC,IAAI,KAAK,MAAM,IAAIkC,MAAM,CAAClC,IAAI,KAAK,WAAW,EAAE;UACzDwD,eAAe,CAACC,OAAO,CAACD,eAAe,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;QACxD,CAAC,MAAM,IAAIxB,MAAM,CAAClC,IAAI,KAAK,MAAM,EAAE;UACjCwD,eAAe,CAACC,OAAO,CAACD,eAAe,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;QACxD;QAEA,oBACExE,OAAA,CAACL,IAAI;UAEH8E,EAAE,EAAE,WAAWzB,MAAM,CAAChB,EAAE,IAAIgB,MAAM,CAACnC,SAAS,EAAG;UAC/C6D,KAAK,EAAE;YACLC,WAAW,EAAE5B,UAAU,CAACC,MAAM,CAAC;YAC/B4B,UAAU,EAAE5B,MAAM,CAAClC,IAAI;YACvB+D,QAAQ,EAAE7B,MAAM,CAAC8B;UACnB,CAAE;UACFhB,SAAS,EAAC,aAAa;UAAAL,QAAA,eAEvBzD,OAAA;YAAK8D,SAAS,EAAC,aAAa;YAAAL,QAAA,GACzB,CAAAT,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAElC,IAAI,kBACXd,OAAA;cAAM8D,SAAS,EAAC,iBAAiB;cAAAL,QAAA,EAAET,MAAM,CAAClC;YAAI;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CACtD,eACD7D,OAAA;cAAAyD,QAAA,EAAKV,UAAU,CAACC,MAAM;YAAC;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B;QAAC,GAdDb,MAAM,CAAChB,EAAE;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeV,CAAC;MAEX,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3D,EAAA,CA7FuBD,MAAM;EAAA,QACGL,SAAS;AAAA;AAAAmF,EAAA,GADlB9E,MAAM;AAAA,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}