{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/TeamMatches.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './css/TeamMatches.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TeamMatches() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [teamNames, setTeamNames] = useState({});\n  const [activeTab, setActiveTab] = useState('live');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchMatches = async () => {\n      try {\n        const res = await axios.get(`/api/teams/${id}/matches`);\n        const allMatches = res.data.data.fixtures || [];\n        setMatches(allMatches);\n\n        // Extract all team IDs\n        const teamIds = new Set();\n        allMatches.forEach(m => {\n          teamIds.add(m.localteam_id);\n          teamIds.add(m.visitorteam_id);\n        });\n        const names = {};\n        await Promise.all([...teamIds].map(async teamId => {\n          try {\n            const teamRes = await axios.get(`/api/teams/${teamId}`);\n            names[teamId] = teamRes.data.data.data.name;\n          } catch (err) {\n            names[teamId] = 'Unknown';\n          }\n        }));\n        setTeamNames(names);\n      } catch (err) {\n        console.error('Error loading matches:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMatches();\n  }, [id]);\n  const getTeamName = teamId => teamNames[teamId] || 'TBD';\n  const live = ['LIVE', '1st Innings', '2nd Innings', '3rd Innings', '4th Innings', 'Stump Day 1', 'Stump Day 2', 'Stump Day 3', 'Stump Day 4', 'Tea Break', 'Lunch', 'Dinner', 'Innings Break', 'Int.', 'Delayed'];\n  const upcoming = ['NS', 'Postp.'];\n  const completed = ['Finished', 'Cancl', 'Aban.'];\n  const liveMatches = matches.filter(m => live.includes(m.status));\n  const upcomingMatches = matches.filter(m => upcoming.includes(m.status));\n  const completedMatches = matches.filter(m => completed.includes(m.status));\n  const filterMatches = type => {\n    if (type === 'live') return liveMatches;\n    if (type === 'upcoming') return upcomingMatches;\n    if (type === 'completed') return completedMatches;\n  };\n  const formattedDate = input => {\n    if (!input) return 'N/A';\n    try {\n      return new Date(input).toLocaleString();\n    } catch (e) {\n      return 'Invalid date';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-matches\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Matches for \", getTeamName(id), \" Cricket Team\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [['live', 'upcoming', 'completed'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === tab ? 'active' : '',\n        onClick: () => setActiveTab(tab),\n        children: tab.charAt(0).toUpperCase() + tab.slice(1)\n      }, tab, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)), \"if (!liveMatches.length) return \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No live matches available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 35\n      }, this), \"; if (!upcomingMatches.length) return \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No upcoming matches available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 39\n      }, this), \"; if (!completedMatches.length) return \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No completed matches available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 40\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading matches...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-list\",\n      children: filterMatches(activeTab).map(match => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-card\",\n        onClick: () => navigate(`/match/${match.id}`, {\n          state: {\n            from: 'Teams'\n          }\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [getTeamName(match.localteam_id), \" vs \", getTeamName(match.visitorteam_id), \", \", match.round]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: match.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formattedDate(match.starting_at)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, match.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(TeamMatches, \"EKGqzuwCtmLjfY8OW5gZ41DVgXY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TeamMatches;\nvar _c;\n$RefreshReg$(_c, \"TeamMatches\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useParams","axios","jsxDEV","_jsxDEV","TeamMatches","_s","id","matches","setMatches","loading","setLoading","teamNames","setTeamNames","activeTab","setActiveTab","navigate","fetchMatches","res","get","allMatches","data","fixtures","teamIds","Set","forEach","m","add","localteam_id","visitorteam_id","names","Promise","all","map","teamId","teamRes","name","err","console","error","getTeamName","live","upcoming","completed","liveMatches","filter","includes","status","upcomingMatches","completedMatches","filterMatches","type","formattedDate","input","Date","toLocaleString","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tab","onClick","charAt","toUpperCase","slice","match","state","from","round","starting_at","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/TeamMatches.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './css/TeamMatches.css';\n\nexport default function TeamMatches() {\n  const { id } = useParams();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [teamNames, setTeamNames] = useState({});\n  const [activeTab, setActiveTab] = useState('live');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      try {\n        const res = await axios.get(`/api/teams/${id}/matches`);\n        const allMatches = res.data.data.fixtures || [];\n        setMatches(allMatches);\n\n        // Extract all team IDs\n        const teamIds = new Set();\n        allMatches.forEach((m) => {\n          teamIds.add(m.localteam_id);\n          teamIds.add(m.visitorteam_id);\n        });\n\n        const names = {};\n        await Promise.all([...teamIds].map(async (teamId) => {\n          try {\n            const teamRes = await axios.get(`/api/teams/${teamId}`);\n            names[teamId] = teamRes.data.data.data.name;\n          } catch (err) {\n            names[teamId] = 'Unknown';\n          }\n        }));\n\n        setTeamNames(names);\n      } catch (err) {\n        console.error('Error loading matches:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMatches();\n  }, [id]);\n\n  const getTeamName = (teamId) => teamNames[teamId] || 'TBD';\n\n  const live = ['LIVE', '1st Innings', '2nd Innings', '3rd Innings', '4th Innings', 'Stump Day 1', 'Stump Day 2', 'Stump Day 3', 'Stump Day 4', 'Tea Break', 'Lunch', 'Dinner', 'Innings Break', 'Int.', 'Delayed'];\n  const upcoming = ['NS', 'Postp.'];\n  const completed = ['Finished', 'Cancl', 'Aban.'];\n\n  const liveMatches = matches.filter(m => live.includes(m.status));\n  const upcomingMatches = matches.filter(m => upcoming.includes(m.status))\n  const completedMatches = matches.filter(m => completed.includes(m.status));\n\n  const filterMatches = (type) => {\n    if (type === 'live') return liveMatches;\n    if (type === 'upcoming') return upcomingMatches;\n    if (type === 'completed') return completedMatches;\n  };\n\n  const formattedDate = (input) => {\n    if (!input) return 'N/A';\n    try {\n      return new Date(input).toLocaleString();\n    } catch (e) {\n      return 'Invalid date';\n    }\n  };\n\n  return (\n    <div className=\"team-matches\">\n      <h2>Matches for {getTeamName(id)} Cricket Team</h2>\n\n      <div className=\"tabs\">\n        {['live', 'upcoming', 'completed'].map((tab) => (\n          <button\n            key={tab}\n            className={activeTab === tab ? 'active' : ''}\n            onClick={() => setActiveTab(tab)}\n          >\n            {tab.charAt(0).toUpperCase() + tab.slice(1)}\n          </button>\n        ))}\n  if (!liveMatches.length) return <p>No live matches available.</p>;\n  if (!upcomingMatches.length) return <p>No upcoming matches available.</p>;\n  if (!completedMatches.length) return <p>No completed matches available.</p>;\n      </div>\n\n      {loading ? (\n        <p>Loading matches...</p>\n      ) : (\n        <div className=\"match-list\">\n          {filterMatches(activeTab).map((match) => (\n            <div key={match.id} className=\"match-card\" onClick={() => navigate(`/match/${match.id}`, { state: { from: 'Teams' } })}>\n              <h4>{getTeamName(match.localteam_id)} vs {getTeamName(match.visitorteam_id)}, {match.round}</h4>\n              <p>{match.status}</p>\n              <p>{formattedDate(match.starting_at)}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}