{"ast":null,"code":"export const getTossWinnerName=info=>{var _info$localteam,_info$visitorteam;if((info===null||info===void 0?void 0:info.toss_won_team_id)===(info===null||info===void 0?void 0:(_info$localteam=info.localteam)===null||_info$localteam===void 0?void 0:_info$localteam.id)){return info.localteam.name;}else if((info===null||info===void 0?void 0:info.toss_won_team_id)===(info===null||info===void 0?void 0:(_info$visitorteam=info.visitorteam)===null||_info$visitorteam===void 0?void 0:_info$visitorteam.id)){return info.visitorteam.name;}else{return'';}};export const getTossDecision=info=>{if((info===null||info===void 0?void 0:info.elected)==='batting')return'bat first';if((info===null||info===void 0?void 0:info.elected)==='bowling')return'bowl first';return'';};export const matchYear=info=>{return new Date(info===null||info===void 0?void 0:info.starting_at).getFullYear();};export const matchStageName=match=>{var _match$stage;return(match===null||match===void 0?void 0:(_match$stage=match.stage)===null||_match$stage===void 0?void 0:_match$stage.name)+', '+matchYear(match);};export const venueName=match=>{var _match$venue,_match$venue2;return(_match$venue=match.venue)!==null&&_match$venue!==void 0&&_match$venue.name&&(_match$venue2=match.venue)!==null&&_match$venue2!==void 0&&_match$venue2.city?\"\".concat(match.venue.name,\", \").concat(match.venue.city):'TBD';};export const getTeamRuns=(match,teamId)=>{if(!match.runs||!Array.isArray(match.runs))return'';const innings=match.runs.filter(r=>r.team_id===teamId);return innings.map(r=>\"\".concat(r.score,\"/\").concat(r.wickets,\" (\").concat(r.overs,\" ov)\")).join(' & ');};export const getTeamName=(teamId,data)=>{var _data$localteam,_data$visitorteam;if(teamId===data.localteam_id)return((_data$localteam=data.localteam)===null||_data$localteam===void 0?void 0:_data$localteam.name)||'Local Team';if(teamId===data.visitorteam_id)return((_data$visitorteam=data.visitorteam)===null||_data$visitorteam===void 0?void 0:_data$visitorteam.name)||'Visitor Team';return\"Team \".concat(teamId);};export const getBattingTeamIdByScoreboard=function(scoreboardKey){let batting=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];const entry=batting.find(b=>b.scoreboard===scoreboardKey);return(entry===null||entry===void 0?void 0:entry.team_id)||null;};export const getBowlingTeamIdByScoreboard=function(scoreboardKey){let bowling=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];const entry=bowling.find(b=>b.scoreboard===scoreboardKey);return(entry===null||entry===void 0?void 0:entry.team_id)||null;};","map":{"version":3,"names":["getTossWinnerName","info","_info$localteam","_info$visitorteam","toss_won_team_id","localteam","id","name","visitorteam","getTossDecision","elected","matchYear","Date","starting_at","getFullYear","matchStageName","match","_match$stage","stage","venueName","_match$venue","_match$venue2","venue","city","concat","getTeamRuns","teamId","runs","Array","isArray","innings","filter","r","team_id","map","score","wickets","overs","join","getTeamName","data","_data$localteam","_data$visitorteam","localteam_id","visitorteam_id","getBattingTeamIdByScoreboard","scoreboardKey","batting","arguments","length","undefined","entry","find","b","scoreboard","getBowlingTeamIdByScoreboard","bowling"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/utils/matchUtils.js"],"sourcesContent":["export const getTossWinnerName = (info) => {\n  if (info?.toss_won_team_id === info?.localteam?.id) {\n    return info.localteam.name;\n  } else if (info?.toss_won_team_id === info?.visitorteam?.id) {\n    return info.visitorteam.name;\n  } else {\n    return '';\n  }\n};\n\nexport const getTossDecision = (info) => {\n  if (info?.elected === 'batting') return 'bat first';\n  if (info?.elected === 'bowling') return 'bowl first';\n  return '';\n};\n\nexport const matchYear = (info) => {\n  return new Date(info?.starting_at).getFullYear();\n};\n\nexport const matchStageName = (match) => {\n  return match?.stage?.name + ', ' + matchYear(match);\n};\n\nexport const venueName = (match) => {\n  return match.venue?.name && match.venue?.city\n    ? `${match.venue.name}, ${match.venue.city}`\n    : 'TBD';\n};\n\nexport const getTeamRuns = (match, teamId) => {\n  if (!match.runs || !Array.isArray(match.runs)) return '';\n  const innings = match.runs.filter(r => r.team_id === teamId);\n  return innings\n    .map(r => `${r.score}/${r.wickets} (${r.overs} ov)`)\n    .join(' & ');\n};\n\nexport const getTeamName = (teamId, data) => {\n  if (teamId === data.localteam_id) return data.localteam?.name || 'Local Team';\n  if (teamId === data.visitorteam_id) return data.visitorteam?.name || 'Visitor Team';\n  return `Team ${teamId}`;\n};\n\nexport const getBattingTeamIdByScoreboard = (scoreboardKey, batting = []) => {\n  const entry = batting.find(b => b.scoreboard === scoreboardKey);\n  return entry?.team_id || null;\n};\n\nexport const getBowlingTeamIdByScoreboard = (scoreboardKey, bowling = []) => {\n  const entry = bowling.find(b => b.scoreboard === scoreboardKey);\n  return entry?.team_id || null;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}