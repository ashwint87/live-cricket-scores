{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/series/SeriesSquadsTab.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SeriesSquadsTab({\n  seriesId\n}) {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    let isMounted = true;\n    async function fetchSquads() {\n      try {\n        const res = await axios.get(`/api/series/${seriesId}/matches`);\n        const matches = res.data.data.data || [];\n        const seenTeams = new Map();\n        for (const match of matches) {\n          const seasonId = match.season_id;\n          const teamsToFetch = [match.localteam, match.visitorteam];\n          for (const team of teamsToFetch) {\n            if (!seenTeams.has(team.id)) {\n              try {\n                const squadRes = await axios.get(`/api/teams/${team.id}/squad/${seasonId}`);\n                seenTeams.set(team.id, {\n                  ...team,\n                  squad: squadRes.data.data || []\n                });\n              } catch {\n                seenTeams.set(team.id, {\n                  ...team,\n                  squad: []\n                });\n              }\n            }\n          }\n        }\n        console.log(seenTeams);\n        if (isMounted) {\n          setTeams(Array.from(seenTeams.values()));\n        }\n      } catch (err) {\n        console.error('Error loading squads', err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchSquads();\n    return () => {\n      isMounted = false;\n    };\n  }, [seriesId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Squads...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : teams.map(team => {\n      var _team$squad$squad;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), (_team$squad$squad = team.squad.squad) === null || _team$squad$squad === void 0 ? void 0 : _team$squad$squad.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u2013 \", player.fullname]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, team.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(SeriesSquadsTab, \"aXDoEWYklba3oONGGF/7jRt78n0=\");\n_c = SeriesSquadsTab;\nvar _c;\n$RefreshReg$(_c, \"SeriesSquadsTab\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","SeriesSquadsTab","seriesId","_s","teams","setTeams","loading","setLoading","isMounted","fetchSquads","res","get","matches","data","seenTeams","Map","match","seasonId","season_id","teamsToFetch","localteam","visitorteam","team","has","id","squadRes","set","squad","console","log","Array","from","values","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_team$squad$squad","style","marginBottom","name","player","fullname","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/series/SeriesSquadsTab.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function SeriesSquadsTab({ seriesId }) {\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    async function fetchSquads() {\n      try {\n        const res = await axios.get(`/api/series/${seriesId}/matches`);\n        const matches = res.data.data.data || [];\n        const seenTeams = new Map();\n\n        for (const match of matches) {\n          const seasonId = match.season_id;\n          const teamsToFetch = [match.localteam, match.visitorteam];\n\n          for (const team of teamsToFetch) {\n            if (!seenTeams.has(team.id)) {\n              try {\n                const squadRes = await axios.get(`/api/teams/${team.id}/squad/${seasonId}`);\n                seenTeams.set(team.id, {\n                  ...team,\n                  squad: squadRes.data.data || [],\n                });\n              } catch {\n                seenTeams.set(team.id, {\n                  ...team,\n                  squad: [],\n                });\n              }\n            }\n          }\n        }\nconsole.log(seenTeams);\n        if (isMounted) {\n          setTeams(Array.from(seenTeams.values()));\n        }\n      } catch (err) {\n        console.error('Error loading squads', err);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchSquads();\n    return () => { isMounted = false; };\n  }, [seriesId]);\n\n  return (\n    <div>\n      {loading ? (\n        <p>Loading Squads...</p>\n      ) : teams.map((team) => (\n        <div key={team.id} style={{ marginBottom: '20px' }}>\n          <h4>{team.name}</h4>\n          {team.squad.squad?.map((player) => (\n            <div key={player.id}>â€“ {player.fullname}</div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}