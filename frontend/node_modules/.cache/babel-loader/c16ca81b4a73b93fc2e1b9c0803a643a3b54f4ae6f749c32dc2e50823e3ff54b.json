{"ast":null,"code":"var _jsxFileName = \"/Users/diya-ashwinr/Downloads/cricket-website/frontend/src/components/Series.js\",\n  _s = $RefreshSig$();\n// src/pages/Series.js\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Series.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Series = () => {\n  _s();\n  const [seriesList, setSeriesList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selectedSeries, setSelectedSeries] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const controller = new AbortController();\n    const delayDebounce = setTimeout(() => {\n      const fetchSeries = async () => {\n        try {\n          const query = searchTerm.trim() ? `?search=${searchTerm}` : '';\n          const res = await fetch(`/api/series${query}`, {\n            signal: controller.signal\n          });\n          const json = await res.json();\n          setSeriesList(json.data || []);\n        } catch (err) {\n          if (err.name !== 'AbortError') console.error('Error fetching series list', err);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchSeries();\n    }, 400);\n    return () => {\n      clearTimeout(delayDebounce);\n      controller.abort();\n    };\n  }, [searchTerm]);\n  const loadSeries = async seriesId => {\n    setSelectedSeries(seriesId);\n    setLoading(true);\n    try {\n      const res = await fetch(`/api/series/${seriesId}/matches`);\n      const json = await res.json();\n      setMatches(json.matchList || []);\n      setPointsTable(json.pointsTable || []);\n    } catch (err) {\n      console.error('Failed to load matches or points', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"series-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search series...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"series-search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading series...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"series-grid\",\n      children: seriesList.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"series-card\",\n        onClick: () => loadSeries(s.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: s.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [s.startdate, \" - \", s.enddate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }, this)]\n      }, s.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Series, \"GwURVOkMphMO3I8zaFo09gXQ08s=\", false, function () {\n  return [useNavigate];\n});\n_c = Series;\nexport default Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","jsxDEV","_jsxDEV","Series","_s","seriesList","setSeriesList","searchTerm","setSearchTerm","loading","setLoading","selectedSeries","setSelectedSeries","navigate","controller","AbortController","delayDebounce","setTimeout","fetchSeries","query","trim","res","fetch","signal","json","data","err","name","console","error","clearTimeout","abort","loadSeries","seriesId","setMatches","matchList","setPointsTable","pointsTable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","s","onClick","id","startdate","enddate","_c","$RefreshReg$"],"sources":["/Users/diya-ashwinr/Downloads/cricket-website/frontend/src/components/Series.js"],"sourcesContent":["// src/pages/Series.js\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Series.css';\n\nconst Series = () => {\n  const [seriesList, setSeriesList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selectedSeries, setSelectedSeries] = useState(null);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const delayDebounce = setTimeout(() => {\n      const fetchSeries = async () => {\n        try {\n          const query = searchTerm.trim() ? `?search=${searchTerm}` : '';\n          const res = await fetch(`/api/series${query}`, { signal: controller.signal });\n          const json = await res.json();\n          setSeriesList(json.data || []);\n        } catch (err) {\n          if (err.name !== 'AbortError') console.error('Error fetching series list', err);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchSeries();\n    }, 400);\n\n    return () => {\n      clearTimeout(delayDebounce);\n      controller.abort();\n    };\n  }, [searchTerm]);\n\n  const loadSeries = async (seriesId) => {\n    setSelectedSeries(seriesId);\n    setLoading(true);\n    try {\n      const res = await fetch(`/api/series/${seriesId}/matches`);\n      const json = await res.json();\n      setMatches(json.matchList || []);\n      setPointsTable(json.pointsTable || []);\n    } catch (err) {\n      console.error('Failed to load matches or points', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"series-container\">\n      <h2>All Series</h2>\n\n      <input\n        type=\"text\"\n        placeholder=\"Search series...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        className=\"series-search\"\n      />\n\n      {loading ? (\n        <p>Loading series...</p>\n      ) : (\n            <div className=\"series-grid\">\n              {seriesList.map((s) => (\n                <div\n                  key={s.id}\n                  className=\"series-card\"\n                  onClick={() => loadSeries(s.id)}\n                >\n                  <h3>{s.name}</h3>\n                  <p>\n                    {s.startdate} - {s.enddate}\n                  </p>\n                </div>\n              ))}\n            </div>\n      )}\n    </div>\n  );\n};\n\nexport default Series;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}