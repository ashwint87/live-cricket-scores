{"ast":null,"code":"export const getTossWinnerName = info => {\n  var _info$localteam, _info$visitorteam;\n  if ((info === null || info === void 0 ? void 0 : info.toss_won_team_id) === (info === null || info === void 0 ? void 0 : (_info$localteam = info.localteam) === null || _info$localteam === void 0 ? void 0 : _info$localteam.id)) {\n    return info.localteam.name;\n  } else if ((info === null || info === void 0 ? void 0 : info.toss_won_team_id) === (info === null || info === void 0 ? void 0 : (_info$visitorteam = info.visitorteam) === null || _info$visitorteam === void 0 ? void 0 : _info$visitorteam.id)) {\n    return info.visitorteam.name;\n  } else {\n    return '';\n  }\n};\nexport const getTossDecision = info => {\n  if ((info === null || info === void 0 ? void 0 : info.elected) === 'batting') return 'bat first';\n  if ((info === null || info === void 0 ? void 0 : info.elected) === 'bowling') return 'bowl first';\n  return '';\n};\nexport const matchYear = info => {\n  return new Date(info === null || info === void 0 ? void 0 : info.starting_at).getFullYear();\n};\nexport const getTeamRuns = (match, teamId) => {\n  if (!match.runs || !Array.isArray(match.runs)) return '';\n  const innings = match.runs.filter(r => r.team_id === teamId);\n  return innings.map(r => `${r.score}/${r.wickets} (${r.overs} ov)`).join(' & ');\n};\nconst getTeamName = teamId => {\n  var _data$localteam, _data$visitorteam;\n  if (teamId === data.localteam_id) return ((_data$localteam = data.localteam) === null || _data$localteam === void 0 ? void 0 : _data$localteam.name) || 'Local Team';\n  if (teamId === data.visitorteam_id) return ((_data$visitorteam = data.visitorteam) === null || _data$visitorteam === void 0 ? void 0 : _data$visitorteam.name) || 'Visitor Team';\n  return `Team ${teamId}`;\n};\nconst getBattingTeamIdByScoreboard = sb => {\n  const entry = batting.find(b => b.scoreboard === sb);\n  return (entry === null || entry === void 0 ? void 0 : entry.team_id) || null;\n};","map":{"version":3,"names":["getTossWinnerName","info","_info$localteam","_info$visitorteam","toss_won_team_id","localteam","id","name","visitorteam","getTossDecision","elected","matchYear","Date","starting_at","getFullYear","getTeamRuns","match","teamId","runs","Array","isArray","innings","filter","r","team_id","map","score","wickets","overs","join","getTeamName","_data$localteam","_data$visitorteam","data","localteam_id","visitorteam_id","getBattingTeamIdByScoreboard","sb","entry","batting","find","b","scoreboard"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/utils/matchUtils.js"],"sourcesContent":["export const getTossWinnerName = (info) => {\n  if (info?.toss_won_team_id === info?.localteam?.id) {\n    return info.localteam.name;\n  } else if (info?.toss_won_team_id === info?.visitorteam?.id) {\n    return info.visitorteam.name;\n  } else {\n    return '';\n  }\n};\n\nexport const getTossDecision = (info) => {\n  if (info?.elected === 'batting') return 'bat first';\n  if (info?.elected === 'bowling') return 'bowl first';\n  return '';\n};\n\nexport const matchYear = (info) => {\n  return new Date(info?.starting_at).getFullYear();\n};\n\nexport const getTeamRuns = (match, teamId) => {\n  if (!match.runs || !Array.isArray(match.runs)) return '';\n  const innings = match.runs.filter(r => r.team_id === teamId);\n  return innings\n    .map(r => `${r.score}/${r.wickets} (${r.overs} ov)`)\n    .join(' & ');\n};\n\nconst getTeamName = (teamId) => {\n  if (teamId === data.localteam_id) return data.localteam?.name || 'Local Team';\n  if (teamId === data.visitorteam_id) return data.visitorteam?.name || 'Visitor Team';\n  return `Team ${teamId}`;\n};\n\n  const getBattingTeamIdByScoreboard = (sb) => {\n    const entry = batting.find(b => b.scoreboard === sb);\n    return entry?.team_id || null;\n  };\n\n\n"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAIC,IAAI,IAAK;EAAA,IAAAC,eAAA,EAAAC,iBAAA;EACzC,IAAI,CAAAF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,gBAAgB,OAAKH,IAAI,aAAJA,IAAI,wBAAAC,eAAA,GAAJD,IAAI,CAAEI,SAAS,cAAAH,eAAA,uBAAfA,eAAA,CAAiBI,EAAE,GAAE;IAClD,OAAOL,IAAI,CAACI,SAAS,CAACE,IAAI;EAC5B,CAAC,MAAM,IAAI,CAAAN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,gBAAgB,OAAKH,IAAI,aAAJA,IAAI,wBAAAE,iBAAA,GAAJF,IAAI,CAAEO,WAAW,cAAAL,iBAAA,uBAAjBA,iBAAA,CAAmBG,EAAE,GAAE;IAC3D,OAAOL,IAAI,CAACO,WAAW,CAACD,IAAI;EAC9B,CAAC,MAAM;IACL,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAIR,IAAI,IAAK;EACvC,IAAI,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,OAAO,MAAK,SAAS,EAAE,OAAO,WAAW;EACnD,IAAI,CAAAT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,OAAO,MAAK,SAAS,EAAE,OAAO,YAAY;EACpD,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIV,IAAI,IAAK;EACjC,OAAO,IAAIW,IAAI,CAACX,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY,WAAW,CAAC,CAACC,WAAW,CAAC,CAAC;AAClD,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC5C,IAAI,CAACD,KAAK,CAACE,IAAI,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,KAAK,CAACE,IAAI,CAAC,EAAE,OAAO,EAAE;EACxD,MAAMG,OAAO,GAAGL,KAAK,CAACE,IAAI,CAACI,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,KAAKP,MAAM,CAAC;EAC5D,OAAOI,OAAO,CACXI,GAAG,CAACF,CAAC,IAAI,GAAGA,CAAC,CAACG,KAAK,IAAIH,CAAC,CAACI,OAAO,KAAKJ,CAAC,CAACK,KAAK,MAAM,CAAC,CACnDC,IAAI,CAAC,KAAK,CAAC;AAChB,CAAC;AAED,MAAMC,WAAW,GAAIb,MAAM,IAAK;EAAA,IAAAc,eAAA,EAAAC,iBAAA;EAC9B,IAAIf,MAAM,KAAKgB,IAAI,CAACC,YAAY,EAAE,OAAO,EAAAH,eAAA,GAAAE,IAAI,CAAC5B,SAAS,cAAA0B,eAAA,uBAAdA,eAAA,CAAgBxB,IAAI,KAAI,YAAY;EAC7E,IAAIU,MAAM,KAAKgB,IAAI,CAACE,cAAc,EAAE,OAAO,EAAAH,iBAAA,GAAAC,IAAI,CAACzB,WAAW,cAAAwB,iBAAA,uBAAhBA,iBAAA,CAAkBzB,IAAI,KAAI,cAAc;EACnF,OAAO,QAAQU,MAAM,EAAE;AACzB,CAAC;AAEC,MAAMmB,4BAA4B,GAAIC,EAAE,IAAK;EAC3C,MAAMC,KAAK,GAAGC,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,KAAKL,EAAE,CAAC;EACpD,OAAO,CAAAC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEd,OAAO,KAAI,IAAI;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}