{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/CountdownTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountdownTimer({\n  startTime\n}) {\n  _s();\n  const [timeLeft, setTimeLeft] = useState('');\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      const start = new Date(startTime);\n      const diff = start - now;\n      if (diff <= 0) {\n        setTimeLeft('Match has started');\n        clearInterval(interval);\n        return;\n      }\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(diff % (1000 * 60) / 1000);\n      setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [startTime]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"countdown\",\n    children: [\"Starts in \", timeLeft]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n_s(CountdownTimer, \"+/rc1qCbzmIsyWx4idJnN9XKwiM=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CountdownTimer","startTime","_s","timeLeft","setTimeLeft","interval","setInterval","now","Date","start","diff","clearInterval","hours","Math","floor","minutes","seconds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/CountdownTimer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction CountdownTimer({ startTime }) {\n  const [timeLeft, setTimeLeft] = useState('');\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      const start = new Date(startTime);\n      const diff = start - now;\n\n      if (diff <= 0) {\n        setTimeLeft('Match has started');\n        clearInterval(interval);\n        return;\n      }\n\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n      setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [startTime]);\n\n  return <p className=\"countdown\">Starts in {timeLeft}</p>;\n}\n\nexport default CountdownTimer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,KAAK,GAAG,IAAID,IAAI,CAACP,SAAS,CAAC;MACjC,MAAMS,IAAI,GAAGD,KAAK,GAAGF,GAAG;MAExB,IAAIG,IAAI,IAAI,CAAC,EAAE;QACbN,WAAW,CAAC,mBAAmB,CAAC;QAChCO,aAAa,CAACN,QAAQ,CAAC;QACvB;MACF;MAEA,MAAMO,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACjD,MAAMK,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEJ,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;MACnE,MAAMM,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEJ,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;MAEvDN,WAAW,CAAC,GAAGQ,KAAK,KAAKG,OAAO,KAAKC,OAAO,GAAG,CAAC;IAClD,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAML,aAAa,CAACN,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,oBAAOF,OAAA;IAAGkB,SAAS,EAAC,WAAW;IAAAC,QAAA,GAAC,YAAU,EAACf,QAAQ;EAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC1D;AAACpB,EAAA,CA1BQF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AA4BvB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}