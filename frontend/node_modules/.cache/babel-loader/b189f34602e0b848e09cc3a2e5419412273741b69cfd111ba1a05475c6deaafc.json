{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/match/PartnershipTab.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PartnershipTab({\n  balls = [],\n  batting = [],\n  lineup = []\n}) {\n  const getPlayerName = id => {\n    const player = lineup.find(p => p.id === id);\n    return (player === null || player === void 0 ? void 0 : player.fullname) || 'Unknown';\n  };\n  const groupedByInning = {};\n  balls.forEach(ball => {\n    const inning = ball.scoreboard || 'Inning';\n    if (!groupedByInning[inning]) groupedByInning[inning] = [];\n    groupedByInning[inning].push(ball);\n  });\n  const partnershipsPerInning = {};\n  Object.entries(groupedByInning).forEach(([inning, deliveries]) => {\n    const partnerships = [];\n    let current = {\n      batsmen: new Set(),\n      balls: [],\n      runs: 0\n    };\n    deliveries.forEach(ball => {\n      var _ball$score;\n      const batsmanId = ball.batsman_id;\n      const run = ((_ball$score = ball.score) === null || _ball$score === void 0 ? void 0 : _ball$score.runs) || 0;\n      current.batsmen.add(batsmanId);\n      current.balls.push(ball);\n      current.runs += run;\n      if (ball.wicket) {\n        partnerships.push(current);\n        current = {\n          batsmen: new Set(),\n          balls: [],\n          runs: 0\n        };\n      }\n    });\n    if (current.balls.length > 0) partnerships.push(current);\n    partnershipsPerInning[inning] = partnerships;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Batting Partnerships\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), Object.entries(partnershipsPerInning).map(([inning, partnerships]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: inning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), partnerships.map((p, idx) => {\n        const batsmen = Array.from(p.batsmen).map(getPlayerName).join(' & ');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: batsmen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), \": \", p.runs, \" runs in \", p.balls.length, \" balls\"]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this);\n      })]\n    }, inning, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = PartnershipTab;\nvar _c;\n$RefreshReg$(_c, \"PartnershipTab\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PartnershipTab","balls","batting","lineup","getPlayerName","id","player","find","p","fullname","groupedByInning","forEach","ball","inning","scoreboard","push","partnershipsPerInning","Object","entries","deliveries","partnerships","current","batsmen","Set","runs","_ball$score","batsmanId","batsman_id","run","score","add","wicket","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","Array","from","join","style","marginBottom","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/match/PartnershipTab.js"],"sourcesContent":["import React from 'react';\n\nexport default function PartnershipTab({ balls = [], batting = [], lineup = [] }) {\n  const getPlayerName = (id) => {\n    const player = lineup.find(p => p.id === id);\n    return player?.fullname || 'Unknown';\n  };\n\n  const groupedByInning = {};\n  balls.forEach(ball => {\n    const inning = ball.scoreboard || 'Inning';\n    if (!groupedByInning[inning]) groupedByInning[inning] = [];\n    groupedByInning[inning].push(ball);\n  });\n\n  const partnershipsPerInning = {};\n\n  Object.entries(groupedByInning).forEach(([inning, deliveries]) => {\n    const partnerships = [];\n    let current = { batsmen: new Set(), balls: [], runs: 0 };\n\n    deliveries.forEach(ball => {\n      const batsmanId = ball.batsman_id;\n      const run = ball.score?.runs || 0;\n\n      current.batsmen.add(batsmanId);\n      current.balls.push(ball);\n      current.runs += run;\n\n      if (ball.wicket) {\n        partnerships.push(current);\n        current = { batsmen: new Set(), balls: [], runs: 0 };\n      }\n    });\n\n    if (current.balls.length > 0) partnerships.push(current);\n\n    partnershipsPerInning[inning] = partnerships;\n  });\n\n  return (\n    <div>\n      <h3>Batting Partnerships</h3>\n      {Object.entries(partnershipsPerInning).map(([inning, partnerships]) => (\n        <div key={inning}>\n          <h4>{inning}</h4>\n          {partnerships.map((p, idx) => {\n            const batsmen = Array.from(p.batsmen).map(getPlayerName).join(' & ');\n            return (\n              <div key={idx} style={{ marginBottom: '10px' }}>\n                <strong>{batsmen}</strong>: {p.runs} runs in {p.balls.length} balls\n              </div>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}