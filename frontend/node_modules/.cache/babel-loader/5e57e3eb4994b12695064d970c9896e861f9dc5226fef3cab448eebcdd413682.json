{"ast":null,"code":"// src/context/NewsContext.js\nimport React,{createContext,useContext,useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const NewsContext=/*#__PURE__*/createContext();export const NewsProvider=_ref=>{let{children,query,max=null}=_ref;const[articles,setArticles]=useState([]);const[loading,setLoading]=useState(true);const toSearchQuery=str=>str.replace(/,/g,'').replace(/\\s+/g,'+').replace(/[^\\w+]/g,'');const searchQuery=toSearchQuery(query||'');useEffect(()=>{if(!searchQuery)return;const fetchNews=async()=>{try{let url=\"/api/news?q=\".concat(searchQuery);if(max!==null){url+=\"&max=\".concat(max);}const response=await fetch(url);const json=await response.json();setArticles(json.articles||[]);}catch(error){console.error('Error fetching news articles',error);}finally{setLoading(false);}};fetchNews();},[searchQuery]);return/*#__PURE__*/_jsx(NewsContext.Provider,{value:{articles,loading},children:children});};export const useNews=()=>useContext(NewsContext);","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsx","_jsx","NewsContext","NewsProvider","_ref","children","query","max","articles","setArticles","loading","setLoading","toSearchQuery","str","replace","searchQuery","fetchNews","url","concat","response","fetch","json","error","console","Provider","value","useNews"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/context/NewsContext.js"],"sourcesContent":["// src/context/NewsContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst NewsContext = createContext();\n\nexport const NewsProvider = ({ children, query, max = null }) => {\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const toSearchQuery = (str) =>\n    str.replace(/,/g, '').replace(/\\s+/g, '+').replace(/[^\\w+]/g, '');\n\n  const searchQuery = toSearchQuery(query || '');\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    const fetchNews = async () => {\n      try {\n        let url = `/api/news?q=${searchQuery}`;\n        if (max !== null) {\n          url += `&max=${max}`;\n        }\n\n        const response = await fetch(url);\n        const json = await response.json();\n        setArticles(json.articles || []);\n      } catch (error) {\n        console.error('Error fetching news articles', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNews();\n  }, [searchQuery]);\n\n  return (\n    <NewsContext.Provider value={{ articles, loading }}>\n      {children}\n    </NewsContext.Provider>\n  );\n};\n\nexport const useNews = () => useContext(NewsContext);\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAqC,IAApC,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,GAAG,CAAG,IAAK,CAAC,CAAAH,IAAA,CAC1D,KAAM,CAACI,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAAAa,aAAa,CAAIC,GAAG,EACxBA,GAAG,CAACC,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAACA,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CAACA,OAAO,CAAC,SAAS,CAAE,EAAE,CAAC,CAEnE,KAAM,CAAAC,WAAW,CAAGH,aAAa,CAACN,KAAK,EAAI,EAAE,CAAC,CAE9CR,SAAS,CAAC,IAAM,CACd,GAAI,CAACiB,WAAW,CAAE,OAElB,KAAM,CAAAC,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,GAAI,CAAAC,GAAG,gBAAAC,MAAA,CAAkBH,WAAW,CAAE,CACtC,GAAIR,GAAG,GAAK,IAAI,CAAE,CAChBU,GAAG,UAAAC,MAAA,CAAYX,GAAG,CAAE,CACtB,CAEA,KAAM,CAAAY,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACH,GAAG,CAAC,CACjC,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACE,IAAI,CAAC,CAAC,CAClCZ,WAAW,CAACY,IAAI,CAACb,QAAQ,EAAI,EAAE,CAAC,CAClC,CAAE,MAAOc,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CAAC,OAAS,CACRX,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDK,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACD,WAAW,CAAC,CAAC,CAEjB,mBACEd,IAAA,CAACC,WAAW,CAACsB,QAAQ,EAACC,KAAK,CAAE,CAAEjB,QAAQ,CAAEE,OAAQ,CAAE,CAAAL,QAAA,CAChDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAqB,OAAO,CAAGA,CAAA,GAAM7B,UAAU,CAACK,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}