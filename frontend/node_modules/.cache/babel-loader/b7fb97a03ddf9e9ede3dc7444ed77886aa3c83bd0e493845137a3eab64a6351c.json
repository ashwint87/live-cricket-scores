{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/cricket-website/frontend/src/components/home_widgets/UpcomingSeries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/UpcomingSeries.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpcomingSeries = () => {\n  _s();\n  const [upcomingSeries, setUpcomingSeries] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUpcoming = async () => {\n      try {\n        const res = await fetch(`/api/series`);\n        const data = await res.json();\n        const allSeries = (data === null || data === void 0 ? void 0 : data.data) || [];\n        const tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate());\n        const filtered = allSeries.filter(s => {\n          const start = new Date(s.startDate);\n          return start > tomorrow;\n        });\n        const sorted = filtered.sort((a, b) => new Date(a.startDate) - new Date(b.startDate));\n        setUpcomingSeries(sorted.slice(0, 4));\n      } catch (err) {\n        console.error('Failed to load series:', err);\n      }\n    };\n    fetchUpcoming();\n  }, []);\n  const getOrdinal = n => {\n    const s = [\"th\", \"st\", \"nd\", \"rd\"];\n    const v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  };\n  const formatDateRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    let end;\n    const startMonth = start.getMonth();\n    const startYear = start.getFullYear();\n\n    // Case: endDate is in \"26 Jul\" format\n    if (/^\\d{1,2} [A-Za-z]{3,9}$/.test(endDate)) {\n      // Try to parse with fallback year\n      const temp = new Date(`${endDate} ${startYear}`);\n      const endMonth = temp.getMonth();\n      const endYear = endMonth < startMonth ? startYear + 1 : startYear;\n      end = new Date(`${endDate} ${endYear}`);\n    } else {\n      // Otherwise parse directly\n      end = new Date(endDate);\n    }\n    const startStr = `${start.toLocaleString('default', {\n      month: 'long'\n    })} ${getOrdinal(start.getDate())}`;\n    const endStr = `${end.toLocaleString('default', {\n      month: 'long'\n    })} ${getOrdinal(end.getDate())}, ${end.getFullYear()}`;\n    return `${startStr} to ${endStr}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upcoming-series-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC5 Upcoming Series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/series\",\n        children: \"View All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"series-list\",\n      children: upcomingSeries.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"series-card\",\n        onClick: () => navigate(`/series/${s.id}`),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flags\",\n          children: [s.team1_flag && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: s.team1_flag,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 32\n          }, this), s.team2_flag && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: s.team2_flag,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"series-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"series-name\",\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"series-dates\",\n            children: formatDateRange(s.startDate, s.endDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, s.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(UpcomingSeries, \"6h9UCBoNVyN8jSwNFzYpBUvOGVg=\", false, function () {\n  return [useNavigate];\n});\n_c = UpcomingSeries;\nexport default UpcomingSeries;\nvar _c;\n$RefreshReg$(_c, \"UpcomingSeries\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","UpcomingSeries","_s","upcomingSeries","setUpcomingSeries","navigate","fetchUpcoming","res","fetch","data","json","allSeries","tomorrow","Date","setDate","getDate","filtered","filter","s","start","startDate","sorted","sort","a","b","slice","err","console","error","getOrdinal","n","v","formatDateRange","endDate","end","startMonth","getMonth","startYear","getFullYear","test","temp","endMonth","endYear","startStr","toLocaleString","month","endStr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","map","onClick","id","team1_flag","src","alt","team2_flag","name","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/cricket-website/frontend/src/components/home_widgets/UpcomingSeries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/UpcomingSeries.css';\n\nconst UpcomingSeries = () => {\n  const [upcomingSeries, setUpcomingSeries] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUpcoming = async () => {\n      try {\n        const res = await fetch(`/api/series`);\n        const data = await res.json();\n        const allSeries = data?.data || [];\n\n        const tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate());\n\n        const filtered = allSeries.filter(s => {\n          const start = new Date(s.startDate);\n          return start > tomorrow;\n        });\n\n        const sorted = filtered.sort(\n          (a, b) => new Date(a.startDate) - new Date(b.startDate)\n        );\n\n        setUpcomingSeries(sorted.slice(0, 4));\n      } catch (err) {\n        console.error('Failed to load series:', err);\n      }\n    };\n\n    fetchUpcoming();\n  }, []);\n\nconst getOrdinal = (n) => {\n  const s = [\"th\", \"st\", \"nd\", \"rd\"];\n  const v = n % 100;\n  return n + (s[(v - 20) % 10] || s[v] || s[0]);\n};\n\nconst formatDateRange = (startDate, endDate) => {\n  const start = new Date(startDate);\n  let end;\n\n  const startMonth = start.getMonth();\n  const startYear = start.getFullYear();\n\n  // Case: endDate is in \"26 Jul\" format\n  if (/^\\d{1,2} [A-Za-z]{3,9}$/.test(endDate)) {\n    // Try to parse with fallback year\n    const temp = new Date(`${endDate} ${startYear}`);\n    const endMonth = temp.getMonth();\n    const endYear = endMonth < startMonth ? startYear + 1 : startYear;\n    end = new Date(`${endDate} ${endYear}`);\n  } else {\n    // Otherwise parse directly\n    end = new Date(endDate);\n  }\n\n  const startStr = `${start.toLocaleString('default', { month: 'long' })} ${getOrdinal(start.getDate())}`;\n  const endStr = `${end.toLocaleString('default', { month: 'long' })} ${getOrdinal(end.getDate())}, ${end.getFullYear()}`;\n\n  return `${startStr} to ${endStr}`;\n};\n\n\n  return (\n    <div className=\"upcoming-series-widget\">\n      <div className=\"header\">\n        <h3>ðŸ“… Upcoming Series</h3>\n        <a href=\"/series\">\n          View All\n        </a>\n      </div>\n\n      <div className=\"series-list\">\n        {upcomingSeries.map((s) => (\n          <div className=\"series-card\" key={s.id} onClick={() => navigate(`/series/${s.id}`)}>\n            <div className=\"flags\">\n              {s.team1_flag && <img src={s.team1_flag} alt=\"\" />}\n              {s.team2_flag && <img src={s.team2_flag} alt=\"\" />}\n            </div>\n            <div className=\"series-info\">\n              <p className=\"series-name\">{s.name}</p>\n              <p className=\"series-dates\">\n                {formatDateRange(s.startDate, s.endDate)}\n              </p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default UpcomingSeries;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}