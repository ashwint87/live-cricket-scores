{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/SeriesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeriesContext = /*#__PURE__*/createContext();\nexport const SeriesProvider = ({\n  children\n}) => {\n  _s();\n  const [seriesList, setSeriesList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchSeries = async () => {\n      try {\n        var _json$data;\n        const res = await fetch('/api/series');\n        const json = await res.json();\n        setSeriesList(((_json$data = json.data) === null || _json$data === void 0 ? void 0 : _json$data.data) || []);\n      } catch (err) {\n        console.error('Error fetching series:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSeries();\n  }, []);\n  console.log(seriesList);\n  return /*#__PURE__*/_jsxDEV(SeriesContext.Provider, {\n    value: {\n      seriesList,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SeriesProvider, \"szuCUR/7vmBcaFq2Vt7Ldvl3+iI=\");\n_c = SeriesProvider;\nexport const useSeries = () => {\n  _s2();\n  return useContext(SeriesContext);\n};\n_s2(useSeries, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SeriesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","SeriesContext","SeriesProvider","children","_s","seriesList","setSeriesList","loading","setLoading","fetchSeries","_json$data","res","fetch","json","data","err","console","error","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSeries","_s2","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/SeriesContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst SeriesContext = createContext();\n\nexport const SeriesProvider = ({ children }) => {\n  const [seriesList, setSeriesList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchSeries = async () => {\n      try {\n        const res = await fetch('/api/series');\n        const json = await res.json();\n        setSeriesList(json.data?.data || []);\n      } catch (err) {\n        console.error('Error fetching series:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSeries();\n  }, []);\n\nconsole.log(seriesList);\n  return (\n    <SeriesContext.Provider value={{ seriesList, loading }}>\n      {children}\n    </SeriesContext.Provider>\n  );\n};\n\nexport const useSeries = () => useContext(SeriesContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMO,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QAAA,IAAAC,UAAA;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;QACtC,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;QAC7BP,aAAa,CAAC,EAAAI,UAAA,GAAAG,IAAI,CAACC,IAAI,cAAAJ,UAAA,uBAATA,UAAA,CAAWI,IAAI,KAAI,EAAE,CAAC;MACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC9C,CAAC,SAAS;QACRP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAERO,OAAO,CAACE,GAAG,CAACb,UAAU,CAAC;EACrB,oBACEL,OAAA,CAACC,aAAa,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,UAAU;MAAEE;IAAQ,CAAE;IAAAJ,QAAA,EACpDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACpB,EAAA,CAzBWF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AA2B3B,OAAO,MAAMwB,SAAS,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM/B,UAAU,CAACK,aAAa,CAAC;AAAA;AAAC0B,GAAA,CAA5CD,SAAS;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}