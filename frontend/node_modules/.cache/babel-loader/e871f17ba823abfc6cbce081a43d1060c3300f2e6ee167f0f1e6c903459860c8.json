{"ast":null,"code":"var _jsxFileName = \"/Users/diya-ashwinr/Downloads/cricket-website/frontend/src/components/Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Teams.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTeams = async () => {\n      try {\n        const response = await fetch(`/api/teams`);\n        const json = await response.json();\n        setTeams(json.data || []);\n      } catch (err) {\n        console.error('Failed to fetch teams:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTeams();\n  }, []);\n  const handleTeamClick = async teamId => {\n    try {\n      const response = await fetch(`/api/team/${teamId}/seasons`);\n      console.log(response);\n      const json = await response.json();\n      const seasons = json.seasons || [];\n      if (seasons.length > 0) {\n        const latestSeason = seasons[0].id;\n        navigate(`/team/${teamId}/squad/${latestSeason}`);\n      } else {\n        alert('No season data available for this team.');\n      }\n    } catch (err) {\n      console.error('Failed to fetch season:', err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading Teams...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"teams-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"teams-heading\",\n      children: \"All Teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"teams-grid\",\n      children: teams.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-card\",\n        onClick: () => handleTeamClick(team.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: team.image_path,\n          alt: team.code,\n          className: \"team-flag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"team-name\",\n          children: team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, team.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Teams, \"p7KyiqphB1BGLt/i/ewfm3dT0JU=\", false, function () {\n  return [useNavigate];\n});\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Teams","_s","teams","setTeams","loading","setLoading","navigate","fetchTeams","response","fetch","json","data","err","console","error","handleTeamClick","teamId","log","seasons","length","latestSeason","id","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","team","onClick","src","image_path","alt","code","name","_c","$RefreshReg$"],"sources":["/Users/diya-ashwinr/Downloads/cricket-website/frontend/src/components/Teams.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Teams.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst Teams = () => {\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTeams = async () => {\n      try {\n        const response = await fetch(`/api/teams`);\n        const json = await response.json();\n        setTeams(json.data || []);\n      } catch (err) {\n        console.error('Failed to fetch teams:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTeams();\n  }, []);\n\n  const handleTeamClick = async (teamId) => {\n    try {\n      const response = await fetch(`/api/team/${teamId}/seasons`);\nconsole.log(response);\n      const json = await response.json();\n      const seasons = json.seasons || [];\n\n      if (seasons.length > 0) {\n        const latestSeason = seasons[0].id;\n        navigate(`/team/${teamId}/squad/${latestSeason}`);\n      } else {\n        alert('No season data available for this team.');\n      }\n    } catch (err) {\n      console.error('Failed to fetch season:', err);\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading Teams...</div>;\n\n  return (\n    <div className=\"teams-container\">\n      <h2 className=\"teams-heading\">All Teams</h2>\n      <div className=\"teams-grid\">\n        {teams.map((team) => (\n          <div\n            key={team.id}\n            className=\"team-card\"\n            onClick={() => handleTeamClick(team.id)}\n          >\n            <img src={team.image_path} alt={team.code} className=\"team-flag\" />\n            <span className=\"team-name\">{team.name}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Teams;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}