{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/series/SeriesMatchesTab.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FORMAT_CODES = ['T20', 'T10', 'ODI', 'T20I', '4DAY', 'TEST', 'TEST/5DAY', 'LIST A'];\nexport default function SeriesMatchesTab() {\n  _s();\n  const {\n    seriesId\n  } = useParams();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMatches = async () => {\n      setLoading(true);\n      try {\n        const stageId = parseInt(seriesId);\n\n        // Fetch both current and +1 stage\n        const [stageRes, nextStageRes] = await Promise.allSettled([axios.get(`/api/stages/${stageId}`), axios.get(`/api/stages/${stageId + 1}`)]);\n        const stage = stageRes.status === 'fulfilled' ? stageRes.value.data.data.data : null;\n        const nextStage = nextStageRes.status === 'fulfilled' ? nextStageRes.value.data.data.data : null;\n        let stageIds = [stageId];\n        const shouldIncludeNext = stage && nextStage && stage.league_id === nextStage.league_id && stage.season_id === nextStage.season_id && stage.code === nextStage.code && !FORMAT_CODES.includes((stage.code || '').toUpperCase());\n        if (shouldIncludeNext) {\n          stageIds.push(stageId + 1);\n        }\n\n        // Fetch and merge matches for all confirmed stage IDs\n        const allMatchResults = await Promise.all(stageIds.map(id => axios.get(`/api/series/${id}/matches`)));\n        const combined = allMatchResults.flatMap(res => {\n          var _res$data$data;\n          return ((_res$data$data = res.data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.data) || [];\n        });\n        setMatches(combined);\n      } catch (err) {\n        console.error('Error fetching series matches:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMatches();\n  }, [seriesId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading matches...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 23\n  }, this);\n  if (matches.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No matches found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Series Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: matches.map(match => {\n        var _match$venue;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [match.round, \" - \", match.starting_at, \" - \", (_match$venue = match.venue) === null || _match$venue === void 0 ? void 0 : _match$venue.name]\n        }, match.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(SeriesMatchesTab, \"eIdoELNJTyfpW2zD+J6FK/cmGtI=\", false, function () {\n  return [useParams];\n});\n_c = SeriesMatchesTab;\nvar _c;\n$RefreshReg$(_c, \"SeriesMatchesTab\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","FORMAT_CODES","SeriesMatchesTab","_s","seriesId","matches","setMatches","loading","setLoading","fetchMatches","stageId","parseInt","stageRes","nextStageRes","Promise","allSettled","get","stage","status","value","data","nextStage","stageIds","shouldIncludeNext","league_id","season_id","code","includes","toUpperCase","push","allMatchResults","all","map","id","combined","flatMap","res","_res$data$data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","match","_match$venue","round","starting_at","venue","name","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/series/SeriesMatchesTab.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst FORMAT_CODES = ['T20', 'T10', 'ODI', 'T20I', '4DAY', 'TEST', 'TEST/5DAY', 'LIST A'];\n\nexport default function SeriesMatchesTab() {\n  const { seriesId } = useParams();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      setLoading(true);\n\n      try {\n        const stageId = parseInt(seriesId);\n\n        // Fetch both current and +1 stage\n        const [stageRes, nextStageRes] = await Promise.allSettled([\n          axios.get(`/api/stages/${stageId}`),\n          axios.get(`/api/stages/${stageId + 1}`)\n        ]);\n\n        const stage = stageRes.status === 'fulfilled' ? stageRes.value.data.data.data : null;\n        const nextStage = nextStageRes.status === 'fulfilled' ? nextStageRes.value.data.data.data : null;\n\n        let stageIds = [stageId];\n\n        const shouldIncludeNext =\n          stage &&\n          nextStage &&\n          stage.league_id === nextStage.league_id &&\n          stage.season_id === nextStage.season_id &&\n          stage.code === nextStage.code &&\n          !FORMAT_CODES.includes((stage.code || '').toUpperCase());\n\n        if (shouldIncludeNext) {\n          stageIds.push(stageId + 1);\n        }\n\n        // Fetch and merge matches for all confirmed stage IDs\n        const allMatchResults = await Promise.all(\n          stageIds.map(id => axios.get(`/api/series/${id}/matches`))\n        );\n\n        const combined = allMatchResults.flatMap(res => res.data.data?.data || []);\n        setMatches(combined);\n      } catch (err) {\n        console.error('Error fetching series matches:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMatches();\n  }, [seriesId]);\n\n  if (loading) return <div>Loading matches...</div>;\n  if (matches.length === 0) return <div>No matches found.</div>;\n\n  return (\n    <div>\n      <h2>Series Matches</h2>\n      <ul>\n        {matches.map((match) => (\n          <li key={match.id}>\n            {match.round} - {match.starting_at} - {match.venue?.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}