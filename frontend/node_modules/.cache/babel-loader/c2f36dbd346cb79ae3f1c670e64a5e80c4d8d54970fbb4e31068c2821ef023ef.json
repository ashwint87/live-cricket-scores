{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/cricket-website/frontend/src/components/home_widgets/UpcomingSeries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/UpcomingSeries.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpcomingSeries = () => {\n  _s();\n  const [upcomingSeries, setUpcomingSeries] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUpcoming = async () => {\n      try {\n        const res = await fetch(`/api/series`);\n        const data = await res.json();\n        const allSeries = (data === null || data === void 0 ? void 0 : data.data) || [];\n        const tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate());\n        const filtered = allSeries.filter(s => {\n          const start = new Date(s.startDate);\n          return start > tomorrow;\n        });\n        const sorted = filtered.sort((a, b) => new Date(a.startDate) - new Date(b.startDate));\n        setUpcomingSeries(sorted.slice(0, 4));\n      } catch (err) {\n        console.error('Failed to load series:', err);\n      }\n    };\n    fetchUpcoming();\n  }, []);\n  const formatDateRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    let end;\n\n    // If endDate doesn't contain a year (e.g., \"26 Jul\"), add fallback year\n    if (/^\\d{1,2} [A-Za-z]{3,9}$/.test(endDate)) {\n      const fallbackYear = start.getFullYear();\n      const tempDate = new Date(`${endDate} ${fallbackYear}`);\n\n      // Handle year roll-over if end month is before start month\n      const endMonth = tempDate.getMonth();\n      const startMonth = start.getMonth();\n      const adjustedYear = endMonth < startMonth ? fallbackYear + 1 : fallbackYear;\n      end = new Date(`${endDate} ${adjustedYear}`);\n    } else {\n      end = new Date(endDate);\n    }\n    const optionsShort = {\n      day: 'numeric',\n      month: 'short'\n    };\n    const optionsLong = {\n      ...optionsShort,\n      year: 'numeric'\n    };\n    const startStr = start.toLocaleDateString('en-GB', optionsShort);\n    const endStr = end.toLocaleDateString('en-GB', optionsLong);\n    return `${startStr} to ${endStr}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upcoming-series-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC5 Upcoming Series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/series\",\n        children: \"View All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"series-list\",\n      children: upcomingSeries.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"series-card\",\n        onClick: () => navigate(`/series/${s.id}`),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flags\",\n          children: [s.team1_flag && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: s.team1_flag,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 32\n          }, this), s.team2_flag && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: s.team2_flag,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"series-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"series-name\",\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"series-dates\",\n            children: formatDateRange(s.startDate, s.endDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, s.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(UpcomingSeries, \"6h9UCBoNVyN8jSwNFzYpBUvOGVg=\", false, function () {\n  return [useNavigate];\n});\n_c = UpcomingSeries;\nexport default UpcomingSeries;\nvar _c;\n$RefreshReg$(_c, \"UpcomingSeries\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","UpcomingSeries","_s","upcomingSeries","setUpcomingSeries","navigate","fetchUpcoming","res","fetch","data","json","allSeries","tomorrow","Date","setDate","getDate","filtered","filter","s","start","startDate","sorted","sort","a","b","slice","err","console","error","formatDateRange","endDate","end","test","fallbackYear","getFullYear","tempDate","endMonth","getMonth","startMonth","adjustedYear","optionsShort","day","month","optionsLong","year","startStr","toLocaleDateString","endStr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","map","onClick","id","team1_flag","src","alt","team2_flag","name","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/cricket-website/frontend/src/components/home_widgets/UpcomingSeries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/UpcomingSeries.css';\n\nconst UpcomingSeries = () => {\n  const [upcomingSeries, setUpcomingSeries] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUpcoming = async () => {\n      try {\n        const res = await fetch(`/api/series`);\n        const data = await res.json();\n        const allSeries = data?.data || [];\n\n        const tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate());\n\n        const filtered = allSeries.filter(s => {\n          const start = new Date(s.startDate);\n          return start > tomorrow;\n        });\n\n        const sorted = filtered.sort(\n          (a, b) => new Date(a.startDate) - new Date(b.startDate)\n        );\n\n        setUpcomingSeries(sorted.slice(0, 4));\n      } catch (err) {\n        console.error('Failed to load series:', err);\n      }\n    };\n\n    fetchUpcoming();\n  }, []);\n\nconst formatDateRange = (startDate, endDate) => {\n  const start = new Date(startDate);\n  let end;\n\n  // If endDate doesn't contain a year (e.g., \"26 Jul\"), add fallback year\n  if (/^\\d{1,2} [A-Za-z]{3,9}$/.test(endDate)) {\n    const fallbackYear = start.getFullYear();\n    const tempDate = new Date(`${endDate} ${fallbackYear}`);\n\n    // Handle year roll-over if end month is before start month\n    const endMonth = tempDate.getMonth();\n    const startMonth = start.getMonth();\n    const adjustedYear = endMonth < startMonth ? fallbackYear + 1 : fallbackYear;\n\n    end = new Date(`${endDate} ${adjustedYear}`);\n  } else {\n    end = new Date(endDate);\n  }\n\n  const optionsShort = { day: 'numeric', month: 'short' };\n  const optionsLong = { ...optionsShort, year: 'numeric' };\n\n  const startStr = start.toLocaleDateString('en-GB', optionsShort);\n  const endStr = end.toLocaleDateString('en-GB', optionsLong);\n\n  return `${startStr} to ${endStr}`;\n};\n\n\n  return (\n    <div className=\"upcoming-series-widget\">\n      <div className=\"header\">\n        <h3>ðŸ“… Upcoming Series</h3>\n        <a href=\"/series\">\n          View All\n        </a>\n      </div>\n\n      <div className=\"series-list\">\n        {upcomingSeries.map((s) => (\n          <div className=\"series-card\" key={s.id} onClick={() => navigate(`/series/${s.id}`)}>\n            <div className=\"flags\">\n              {s.team1_flag && <img src={s.team1_flag} alt=\"\" />}\n              {s.team2_flag && <img src={s.team2_flag} alt=\"\" />}\n            </div>\n            <div className=\"series-info\">\n              <p className=\"series-name\">{s.name}</p>\n              <p className=\"series-dates\">\n                {formatDateRange(s.startDate, s.endDate)}\n              </p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default UpcomingSeries;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}