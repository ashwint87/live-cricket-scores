{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/TeamMatches.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './css/TeamMatches.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TeamMatches() {\n  _s();\n  const {\n    id\n  } = useParams(); // teamId from route\n  const [matches, setMatches] = useState([]);\n  const [teamCache, setTeamCache] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMatches = async () => {\n      try {\n        const res = await axios.get(`/api/teams/${id}/matches`);\n        setMatches(res.data.data || []);\n      } catch (err) {\n        console.error('Error fetching team matches:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMatches();\n  }, [id]);\n  const getTeamName = async teamId => {\n    if (teamCache[teamId]) return teamCache[teamId];\n    try {\n      const res = await axios.get(`/api/teams/${teamId}`);\n      const name = res.data.data.name;\n      setTeamCache(prev => {\n        const updated = {\n          ...prev,\n          [teamId]: name\n        };\n        return updated;\n      });\n      return name;\n    } catch {\n      return 'Unknown';\n    }\n  };\n  const [teamNames, setTeamNames] = useState({});\n  useEffect(() => {\n    const loadAllTeamNames = async () => {\n      const ids = new Set();\n      matches.fixtures.forEach(match => {\n        ids.add(match.localteam_id);\n        ids.add(match.visitorteam_id);\n      });\n      const result = {};\n      for (let teamId of ids) {\n        const name = await getTeamName(teamId);\n        result[teamId] = name;\n      }\n      setTeamNames(result);\n    };\n    if (matches.length > 0) {\n      loadAllTeamNames();\n    }\n  }, [matches]);\n  const classifyMatches = () => {\n    const live = [];\n    const upcoming = [];\n    const completed = [];\n    for (let m of matches) {\n      if (m.live) live.push(m);else if (m.status === 'NS') upcoming.push(m);else completed.push(m);\n    }\n    return {\n      live,\n      upcoming,\n      completed\n    };\n  };\n  const {\n    live,\n    upcoming,\n    completed\n  } = classifyMatches();\n  const renderMatchCard = match => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"match-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [teamNames[match.localteam_id], \" vs \", teamNames[match.visitorteam_id]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", match.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Start Time: \", new Date(match.starting_at).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, match.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading team matches...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-matches\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Team Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), live.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD34 Live Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-section\",\n        children: live.map(renderMatchCard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), upcoming.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC5 Upcoming Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-section\",\n        children: upcoming.map(renderMatchCard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), completed.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2705 Completed Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-section\",\n        children: completed.map(renderMatchCard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(TeamMatches, \"msUqGO7MAEhIVNo23WSDQWi5Npg=\", false, function () {\n  return [useParams];\n});\n_c = TeamMatches;\nvar _c;\n$RefreshReg$(_c, \"TeamMatches\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TeamMatches","_s","id","matches","setMatches","teamCache","setTeamCache","loading","setLoading","fetchMatches","res","get","data","err","console","error","getTeamName","teamId","name","prev","updated","teamNames","setTeamNames","loadAllTeamNames","ids","Set","fixtures","forEach","match","add","localteam_id","visitorteam_id","result","length","classifyMatches","live","upcoming","completed","m","push","status","renderMatchCard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","starting_at","toLocaleString","map","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/TeamMatches.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './css/TeamMatches.css';\n\nexport default function TeamMatches() {\n  const { id } = useParams(); // teamId from route\n  const [matches, setMatches] = useState([]);\n  const [teamCache, setTeamCache] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      try {\n        const res = await axios.get(`/api/teams/${id}/matches`);\n        setMatches(res.data.data || []);\n      } catch (err) {\n        console.error('Error fetching team matches:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMatches();\n  }, [id]);\n\n  const getTeamName = async (teamId) => {\n    if (teamCache[teamId]) return teamCache[teamId];\n    try {\n      const res = await axios.get(`/api/teams/${teamId}`);\n      const name = res.data.data.name;\n      setTeamCache((prev) => {\n        const updated = { ...prev, [teamId]: name };\n        return updated;\n      });\n      return name;\n    } catch {\n      return 'Unknown';\n    }\n  };\n\n  const [teamNames, setTeamNames] = useState({});\n\n  useEffect(() => {\n    const loadAllTeamNames = async () => {\n      const ids = new Set();\n      matches.fixtures.forEach((match) => {\n        ids.add(match.localteam_id);\n        ids.add(match.visitorteam_id);\n      });\n\n      const result = {};\n      for (let teamId of ids) {\n        const name = await getTeamName(teamId);\n        result[teamId] = name;\n      }\n\n      setTeamNames(result);\n    };\n\n    if (matches.length > 0) {\n      loadAllTeamNames();\n    }\n  }, [matches]);\n\n  const classifyMatches = () => {\n    const live = [];\n    const upcoming = [];\n    const completed = [];\n\n    for (let m of matches) {\n      if (m.live) live.push(m);\n      else if (m.status === 'NS') upcoming.push(m);\n      else completed.push(m);\n    }\n\n    return { live, upcoming, completed };\n  };\n\n  const { live, upcoming, completed } = classifyMatches();\n\n  const renderMatchCard = (match) => (\n    <div key={match.id} className=\"match-card\">\n      <h4>{teamNames[match.localteam_id]} vs {teamNames[match.visitorteam_id]}</h4>\n      <p>Status: {match.status}</p>\n      <p>Start Time: {new Date(match.starting_at).toLocaleString()}</p>\n    </div>\n  );\n\n  if (loading) return <p>Loading team matches...</p>;\n\n  return (\n    <div className=\"team-matches\">\n      <h2>Team Matches</h2>\n\n      {live.length > 0 && (\n        <>\n          <h3>ðŸ”´ Live Matches</h3>\n          <div className=\"match-section\">{live.map(renderMatchCard)}</div>\n        </>\n      )}\n\n      {upcoming.length > 0 && (\n        <>\n          <h3>ðŸ“… Upcoming Matches</h3>\n          <div className=\"match-section\">{upcoming.map(renderMatchCard)}</div>\n        </>\n      )}\n\n      {completed.length > 0 && (\n        <>\n          <h3>âœ… Completed Matches</h3>\n          <div className=\"match-section\">{completed.map(renderMatchCard)}</div>\n        </>\n      )}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}