{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/series/SeriesMatchesTab.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { upcomingMatchStatuses, FORMAT_CODES } from './../../constants/matchStatusConstants';\nimport { useSeriesMatchList } from './../../context/SeriesMatchListContext';\nimport MatchCard from './../MatchCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SeriesMatchesTab() {\n  _s();\n  const {\n    seriesId\n  } = useParams();\n  const {\n    seriesMatches,\n    loadingMatches\n  } = useSeriesMatchList();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const processMatches = async () => {\n      setLoading(true);\n      try {\n        const stageId = parseInt(seriesId);\n        const nextStageId = stageId + 1;\n\n        // Fetch both current and next stage metadata\n        const [stageRes, nextStageRes] = await Promise.allSettled([axios.get(`/api/stages/${stageId}`), axios.get(`/api/stages/${nextStageId}`)]);\n        const stage = stageRes.status === 'fulfilled' ? stageRes.value.data.data.data : null;\n        const nextStage = nextStageRes.status === 'fulfilled' ? nextStageRes.value.data.data.data : null;\n        let stageIds = [stageId];\n        const shouldIncludeNext = stage && nextStage && stage.league_id === nextStage.league_id && stage.code === nextStage.code && !FORMAT_CODES.includes((stage.code || '').toUpperCase());\n        if (shouldIncludeNext) {\n          stageIds.push(nextStageId);\n        }\n\n        // Filter matches from context that match confirmed stageIds\n        const filtered = seriesMatches.filter(m => stageIds.includes(m.stage_id));\n        setMatches(filtered);\n      } catch (err) {\n        console.error('Error processing matches from context:', err);\n        setMatches([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    processMatches();\n  }, [seriesId, seriesMatches]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading && loadingMatches ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading matches...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-cards-row\",\n      children: matches.map(match => /*#__PURE__*/_jsxDEV(MatchCard, {\n        match: match\n      }, match.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(SeriesMatchesTab, \"wwfC33QpiH1x1xZz6/AUVwOVXRk=\", false, function () {\n  return [useParams, useSeriesMatchList, useNavigate];\n});\n_c = SeriesMatchesTab;\nvar _c;\n$RefreshReg$(_c, \"SeriesMatchesTab\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","useParams","upcomingMatchStatuses","FORMAT_CODES","useSeriesMatchList","MatchCard","jsxDEV","_jsxDEV","Fragment","_Fragment","SeriesMatchesTab","_s","seriesId","seriesMatches","loadingMatches","matches","setMatches","loading","setLoading","navigate","processMatches","stageId","parseInt","nextStageId","stageRes","nextStageRes","Promise","allSettled","get","stage","status","value","data","nextStage","stageIds","shouldIncludeNext","league_id","code","includes","toUpperCase","push","filtered","filter","m","stage_id","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","match","id","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/series/SeriesMatchesTab.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { upcomingMatchStatuses, FORMAT_CODES } from './../../constants/matchStatusConstants';\nimport { useSeriesMatchList } from './../../context/SeriesMatchListContext';\nimport MatchCard from './../MatchCard';\n\nexport default function SeriesMatchesTab() {\n  const { seriesId } = useParams();  \n  const { seriesMatches, loadingMatches } = useSeriesMatchList();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const processMatches = async () => {\n      setLoading(true);\n\n      try {\n        const stageId = parseInt(seriesId);\n        const nextStageId = stageId + 1;\n\n        // Fetch both current and next stage metadata\n        const [stageRes, nextStageRes] = await Promise.allSettled([\n          axios.get(`/api/stages/${stageId}`),\n          axios.get(`/api/stages/${nextStageId}`)\n        ]);\n\n        const stage = stageRes.status === 'fulfilled' ? stageRes.value.data.data.data : null;\n        const nextStage = nextStageRes.status === 'fulfilled' ? nextStageRes.value.data.data.data : null;\n\n        let stageIds = [stageId];\n\n        const shouldIncludeNext =\n          stage &&\n          nextStage &&\n          stage.league_id === nextStage.league_id &&\n          stage.code === nextStage.code &&\n          !FORMAT_CODES.includes((stage.code || '').toUpperCase());\n\n        if (shouldIncludeNext) {\n          stageIds.push(nextStageId);\n        }\n\n        // Filter matches from context that match confirmed stageIds\n        const filtered = seriesMatches.filter(m => stageIds.includes(m.stage_id));\n        setMatches(filtered);\n      } catch (err) {\n        console.error('Error processing matches from context:', err);\n        setMatches([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    processMatches();\n  }, [seriesId, seriesMatches]);\n\n  return (\n    <>\n      {loading && loadingMatches ? (\n        <p>Loading matches...</p>\n      ) : (\n        <div className=\"match-cards-row\">\n          {matches.map(match => (\n            <MatchCard key={match.id} match={match} />\n          ))}\n        </div>\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}