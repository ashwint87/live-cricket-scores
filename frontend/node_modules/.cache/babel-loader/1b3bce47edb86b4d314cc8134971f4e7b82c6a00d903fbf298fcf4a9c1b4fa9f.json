{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{Link}from'react-router-dom';import{useSeries}from'./../context/SeriesContext';import{FORMAT_CODES}from'./../constants/matchStatusConstants';import{format}from'date-fns';import'./css/Series.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Series(){const{allSeries,loading}=useSeries();const[search,setSearch]=useState('');const uniqueSeriesMap=new Map();allSeries.forEach(s=>{const baseKey=\"\".concat(s.league_id,\"_\").concat(s.season_id,\"_\").concat(s.code,\"_\").concat(s.league,\"_\").concat(s.season);const key=\"\".concat(baseKey,\"_\").concat(s.start_date,\"_\").concat(s.end_date);// Check if another entry with same baseKey exists whose stage_id is +1 or -1 of current\nconst existingEntry=Array.from(uniqueSeriesMap.entries()).find(_ref=>{let[k,val]=_ref;const[ek]=k.split(\"_\".concat(val.start_date,\"_\").concat(val.end_date));const isSameBase=ek===baseKey;const stageMatch=Array.isArray(val.id)&&Array.isArray(s.id)?val.id.some(id1=>s.id.some(id2=>Math.abs(id1-id2)===1)):Math.abs((Array.isArray(val.id)?val.id[0]:val.id)-(Array.isArray(s.id)?s.id[0]:s.id))===1;return isSameBase&&stageMatch;});if(!existingEntry){uniqueSeriesMap.set(key,s);}});const uniqueSeries=Array.from(uniqueSeriesMap.values());const filtered=uniqueSeries.filter(s=>{var _s$name;return(_s$name=s.name)===null||_s$name===void 0?void 0:_s$name.toLowerCase().includes(search.toLowerCase());});const seriesName=series=>{const code=((series===null||series===void 0?void 0:series.code)||'').toUpperCase().trim();if(FORMAT_CODES.includes(code)){return\"\".concat((series===null||series===void 0?void 0:series.name)||'',\" \").concat((series===null||series===void 0?void 0:series.season)||'').trim();}else{return\"\".concat((series===null||series===void 0?void 0:series.league)||'',\" \").concat((series===null||series===void 0?void 0:series.season)||'').trim();}};const formatDate=dateStr=>{if(!dateStr)return'';const d=new Date(dateStr);return format(d,'dd MMM yyyy');};if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"series-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"All Series\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search series...\",value:search,onChange:e=>setSearch(e.target.value),className:\"series-search\"}),/*#__PURE__*/_jsx(\"div\",{className:\"series-grid\",children:filtered.map(series=>{let adjustedEndDate=new Date(series.end_date);if(series.code==='TEST'||series.code==='TEST/5DAY'){adjustedEndDate.setDate(adjustedEndDate.getDate()+4);}else if(series.code==='4DAY'){adjustedEndDate.setDate(adjustedEndDate.getDate()+3);}return/*#__PURE__*/_jsx(Link,{to:\"/series/\".concat(series.id,\"/\").concat(series.season_id),state:{seriesLabel:seriesName(series),seriesCode:series.code,stageIds:series.stage_ids},className:\"series-card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"series-info\",children:[(series===null||series===void 0?void 0:series.code)&&/*#__PURE__*/_jsx(\"span\",{className:\"series-type-tag\",children:series.code}),/*#__PURE__*/_jsx(\"h4\",{children:seriesName(series)}),series.start_date&&series.end_date&&/*#__PURE__*/_jsxs(\"p\",{className:\"series-dates\",children:[formatDate(series.start_date),\" - \",formatDate(adjustedEndDate)]})]})},series.id);})})]});}","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useSeries","FORMAT_CODES","format","jsx","_jsx","jsxs","_jsxs","Series","allSeries","loading","search","setSearch","uniqueSeriesMap","Map","forEach","s","baseKey","concat","league_id","season_id","code","league","season","key","start_date","end_date","existingEntry","Array","from","entries","find","_ref","k","val","ek","split","isSameBase","stageMatch","isArray","id","some","id1","id2","Math","abs","set","uniqueSeries","values","filtered","filter","_s$name","name","toLowerCase","includes","seriesName","series","toUpperCase","trim","formatDate","dateStr","d","Date","children","className","type","placeholder","value","onChange","e","target","map","adjustedEndDate","setDate","getDate","to","state","seriesLabel","seriesCode","stageIds","stage_ids"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/Series.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useSeries } from './../context/SeriesContext';\nimport { FORMAT_CODES } from './../constants/matchStatusConstants';\nimport { format } from 'date-fns';\nimport './css/Series.css';\n\nexport default function Series() {\n  const { allSeries, loading } = useSeries();\n  const [search, setSearch] = useState('');\n\n  const uniqueSeriesMap = new Map();\n\n  allSeries.forEach((s) => {\n    const baseKey = `${s.league_id}_${s.season_id}_${s.code}_${s.league}_${s.season}`;\n    const key = `${baseKey}_${s.start_date}_${s.end_date}`;\n\n    // Check if another entry with same baseKey exists whose stage_id is +1 or -1 of current\n    const existingEntry = Array.from(uniqueSeriesMap.entries()).find(([k, val]) => {\n      const [ek] = k.split(`_${val.start_date}_${val.end_date}`);\n      const isSameBase = ek === baseKey;\n      const stageMatch = Array.isArray(val.id) && Array.isArray(s.id)\n        ? val.id.some((id1) => s.id.some((id2) => Math.abs(id1 - id2) === 1))\n        : Math.abs((Array.isArray(val.id) ? val.id[0] : val.id) - (Array.isArray(s.id) ? s.id[0] : s.id)) === 1;\n\n      return isSameBase && stageMatch;\n    });\n\n    if (!existingEntry) {\n      uniqueSeriesMap.set(key, s);\n    }\n  });\n\n  const uniqueSeries = Array.from(uniqueSeriesMap.values());\n\n  const filtered = uniqueSeries.filter((s) =>\n    s.name?.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const seriesName = (series) => {\n    const code = (series?.code || '').toUpperCase().trim();\n\n    if (FORMAT_CODES.includes(code)) {\n      return `${series?.name || ''} ${series?.season || ''}`.trim();\n    } else {\n      return `${series?.league || ''} ${series?.season || ''}`.trim();\n    }\n  };\n\n  const formatDate = (dateStr) => {\n    if (!dateStr) return '';\n    const d = new Date(dateStr);\n    return format(d, 'dd MMM yyyy');\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"series-container\">\n      <h1>All Series</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search series...\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        className=\"series-search\"\n      />\n\n      <div className=\"series-grid\">\n        {filtered.map(series => {\n          let adjustedEndDate = new Date(series.end_date);\n          if (series.code === 'TEST' || series.code === 'TEST/5DAY') {\n            adjustedEndDate.setDate(adjustedEndDate.getDate() + 4);\n          } else if (series.code === '4DAY') {\n            adjustedEndDate.setDate(adjustedEndDate.getDate() + 3);\n          }\n\n          return (\n            <Link\n              key={series.id}\n              to={`/series/${series.id}/${series.season_id}`}\n              state={{\n                seriesLabel: seriesName(series),\n                seriesCode: series.code,\n                stageIds: series.stage_ids\n              }}\n              className=\"series-card\"\n            >\n              <div className=\"series-info\">\n                {series?.code && (\n                  <span className=\"series-type-tag\">{series.code}</span>\n                )}\n                <h4>{seriesName(series)}</h4>\n                {series.start_date && series.end_date && (\n                  <p className=\"series-dates\">\n                    {formatDate(series.start_date)} - {formatDate(adjustedEndDate)}\n                  </p>\n                )}\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}