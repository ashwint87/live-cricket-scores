{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/TeamSeries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Series() {\n  _s();\n  const [seriesList, setSeriesList] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    const fetchSeries = async () => {\n      try {\n        const res = await fetch(`/api/teams/${teamId}/series`);\n        const json = await res.json();\n        setSeriesList(json.data || []);\n      } catch (err) {\n        console.error('Error fetching series:', err);\n        setSeriesList([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSeries();\n  }, [teamId]);\n  const filtered = seriesList.filter(s => s.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search series...\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      style: {\n        marginBottom: '20px',\n        padding: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), filtered.map(series => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/series/${series.id}/${series.season_id}`,\n        children: [series.name, \" (\", series.code, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, series.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Series, \"UtWB4pU760psjBpvmy0wI+yB/7k=\");\n_c = Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","jsxDEV","_jsxDEV","Series","_s","seriesList","setSeriesList","search","setSearch","fetchSeries","res","fetch","teamId","json","data","err","console","error","setLoading","filtered","filter","s","name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","marginBottom","padding","map","series","to","id","season_id","code","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/TeamSeries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nexport default function Series() {\n  const [seriesList, setSeriesList] = useState([]);\n  const [search, setSearch] = useState('');\n\nuseEffect(() => {\n  const fetchSeries = async () => {\n    try {\n      const res = await fetch(`/api/teams/${teamId}/series`);\n      const json = await res.json();\n      setSeriesList(json.data || []);\n    } catch (err) {\n      console.error('Error fetching series:', err);\n      setSeriesList([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  fetchSeries();\n}, [teamId]);\n\n  const filtered = seriesList.filter(s =>\n    s.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h1>All Series</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search series...\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        style={{ marginBottom: '20px', padding: '5px' }}\n      />\n\n      {filtered.map(series => (\n        <div key={series.id}>\n          <Link to={`/series/${series.id}/${series.season_id}`}>\n            {series.name} ({series.code})\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAcC,MAAM,SAAS,CAAC;QACtD,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BP,aAAa,CAACO,IAAI,CAACC,IAAI,IAAI,EAAE,CAAC;MAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;QAC5CT,aAAa,CAAC,EAAE,CAAC;MACnB,CAAC,SAAS;QACRY,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDT,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACG,MAAM,CAAC,CAAC;EAEV,MAAMO,QAAQ,GAAGd,UAAU,CAACe,MAAM,CAACC,CAAC,IAClCA,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACjB,MAAM,CAACgB,WAAW,CAAC,CAAC,CACpD,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB3B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEzB,MAAO;MACd0B,QAAQ,EAAGC,CAAC,IAAK1B,SAAS,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,KAAK,EAAE;QAAEC,YAAY,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAM;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,EAEDV,QAAQ,CAACoB,GAAG,CAACC,MAAM,iBAClBtC,OAAA;MAAAuB,QAAA,eACEvB,OAAA,CAACF,IAAI;QAACyC,EAAE,EAAE,WAAWD,MAAM,CAACE,EAAE,IAAIF,MAAM,CAACG,SAAS,EAAG;QAAAlB,QAAA,GAClDe,MAAM,CAAClB,IAAI,EAAC,IAAE,EAACkB,MAAM,CAACI,IAAI,EAAC,GAC9B;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC,GAHCW,MAAM,CAACE,EAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CA7CuBD,MAAM;AAAA0C,EAAA,GAAN1C,MAAM;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}