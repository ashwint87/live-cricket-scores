{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/series/SeriesStandingsTab.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTeamInfo } from './../../context/TeamInfoContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SeriesStandingsTab({\n  seriesId\n}) {\n  _s();\n  const [standings, setStandings] = useState([]);\n  const [teams, setTeams] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchStandings = async () => {\n      try {\n        const res = await axios.get(`/api/series/${seriesId}/standings`);\n        const data = res.data.data.data || [];\n        setStandings(data);\n        const uniqueTeamIds = [...new Set(data.map(row => row.team_id))];\n        const teamMap = {};\n        for (const id of uniqueTeamIds) {\n          try {\n            const res = await axios.get(`/api/teams/${id}`);\n            teamMap[id] = res.data.data.data.name;\n          } catch {\n            teamMap[id] = 'Unknown';\n          }\n        }\n        setTeams(teamMap);\n      } catch (e) {\n        console.error('❌ Error fetching standings:', e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStandings();\n  }, [seriesId]);\n  return loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading standings...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this) : !standings || standings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No standings available for the series.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n    border: \"1\",\n    cellPadding: \"5\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Played\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Won\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Lost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"NRR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: standings.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: teams[row.team_id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.won + row.lost + row.draw + row.noresult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.won\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.lost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.netto_run_rate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n_s(SeriesStandingsTab, \"M3tc6+cl4Z3pcOENjVgJBfkhQXo=\");\n_c = SeriesStandingsTab;\nvar _c;\n$RefreshReg$(_c, \"SeriesStandingsTab\");","map":{"version":3,"names":["React","useEffect","useState","useTeamInfo","axios","jsxDEV","_jsxDEV","SeriesStandingsTab","seriesId","_s","standings","setStandings","teams","setTeams","loading","setLoading","fetchStandings","res","get","data","uniqueTeamIds","Set","map","row","team_id","teamMap","id","name","e","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","border","cellPadding","won","lost","draw","noresult","points","netto_run_rate","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/components/series/SeriesStandingsTab.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTeamInfo } from './../../context/TeamInfoContext';\nimport axios from 'axios';\n\nexport default function SeriesStandingsTab({ seriesId }) {\n  const [standings, setStandings] = useState([]);\n  const [teams, setTeams] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchStandings = async () => {\n      try {\n        const res = await axios.get(`/api/series/${seriesId}/standings`);\n        const data = res.data.data.data || [];\n        setStandings(data);\n        const uniqueTeamIds = [...new Set(data.map(row => row.team_id))];\n        const teamMap = {};\n\n\n\n        for (const id of uniqueTeamIds) {\n          try {\n            const res = await axios.get(`/api/teams/${id}`);\n            teamMap[id] = res.data.data.data.name;\n          } catch {\n            teamMap[id] = 'Unknown';\n          }\n        }\n        setTeams(teamMap);\n      } catch (e) {\n        console.error('❌ Error fetching standings:', e);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStandings();\n  }, [seriesId]);\n\n  return (\n    loading ? (\n      <p>Loading standings...</p>\n    ) : !standings || standings.length === 0 ? (\n      <p>No standings available for the series.</p>\n    ) : (\n      <table border=\"1\" cellPadding=\"5\">\n        <thead>\n          <tr>\n            <th>Team</th>\n            <th>Played</th>\n            <th>Won</th>\n            <th>Lost</th>\n            <th>Points</th>\n            <th>NRR</th>\n          </tr>\n        </thead>\n        <tbody>\n          {standings.map(row => (\n            <tr>\n              <td>{teams[row.team_id]}</td>\n              <td>{row.won + row.lost + row.draw + row.noresult}</td>\n              <td>{row.won}</td>\n              <td>{row.lost}</td>\n              <td>{row.points}</td>\n              <td>{row.netto_run_rate}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    )\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}