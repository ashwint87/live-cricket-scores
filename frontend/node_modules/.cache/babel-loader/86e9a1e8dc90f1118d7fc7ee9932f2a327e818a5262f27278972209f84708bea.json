{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/context/NewsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsContext = /*#__PURE__*/createContext();\nexport const NewsProvider = ({\n  children,\n  query,\n  max = null\n}) => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const lastSuccessfulArticles = useRef([]); // holds last good result\n\n  const toSearchQuery = str => str.replace(/,/g, '').replace(/\\s+/g, '+').replace(/[^\\w+]/g, '');\n  const searchQuery = toSearchQuery(query || '');\n  useEffect(() => {\n    if (!searchQuery) return;\n    const fetchNews = async () => {\n      setLoading(true);\n      try {\n        var _json$articles;\n        let url = `/api/news?q=${searchQuery}`;\n        if (max !== null) {\n          url += `&max=${max}`;\n        }\n        const response = await fetch(url);\n        const json = await response.json();\n        if ((_json$articles = json.articles) !== null && _json$articles !== void 0 && _json$articles.length) {\n          setArticles(json.articles);\n          lastSuccessfulArticles.current = json.articles; // update cache\n        } else {\n          console.warn('News API returned empty articles, using cached');\n          setArticles(lastSuccessfulArticles.current);\n        }\n      } catch (error) {\n        console.error('Error fetching news articles', error);\n        setArticles(lastSuccessfulArticles.current); // fallback to last successful\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNews();\n  }, [searchQuery, max]);\n  return /*#__PURE__*/_jsxDEV(NewsContext.Provider, {\n    value: {\n      articles,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsProvider, \"t1O09yrOQRwwj64oCjWNhLd+py0=\");\n_c = NewsProvider;\nexport const useNews = () => {\n  _s2();\n  return useContext(NewsContext);\n};\n_s2(useNews, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"NewsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useRef","jsxDEV","_jsxDEV","NewsContext","NewsProvider","children","query","max","_s","articles","setArticles","loading","setLoading","lastSuccessfulArticles","toSearchQuery","str","replace","searchQuery","fetchNews","_json$articles","url","response","fetch","json","length","current","console","warn","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNews","_s2","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/sportmonks-api-cricket-website/frontend/src/context/NewsContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, useRef } from 'react';\n\nconst NewsContext = createContext();\n\nexport const NewsProvider = ({ children, query, max = null }) => {\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const lastSuccessfulArticles = useRef([]); // holds last good result\n\n  const toSearchQuery = (str) =>\n    str.replace(/,/g, '').replace(/\\s+/g, '+').replace(/[^\\w+]/g, '');\n\n  const searchQuery = toSearchQuery(query || '');\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    const fetchNews = async () => {\n      setLoading(true);\n      try {\n        let url = `/api/news?q=${searchQuery}`;\n        if (max !== null) {\n          url += `&max=${max}`;\n        }\n\n        const response = await fetch(url);\n        const json = await response.json();\n\n        if (json.articles?.length) {\n          setArticles(json.articles);\n          lastSuccessfulArticles.current = json.articles; // update cache\n        } else {\n          console.warn('News API returned empty articles, using cached');\n          setArticles(lastSuccessfulArticles.current);\n        }\n      } catch (error) {\n        console.error('Error fetching news articles', error);\n        setArticles(lastSuccessfulArticles.current); // fallback to last successful\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNews();\n  }, [searchQuery, max]);\n\n  return (\n    <NewsContext.Provider value={{ articles, loading }}>\n      {children}\n    </NewsContext.Provider>\n  );\n};\n\nexport const useNews = () => useContext(NewsContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,GAAG,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMc,sBAAsB,GAAGb,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE3C,MAAMc,aAAa,GAAIC,GAAG,IACxBA,GAAG,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;EAEnE,MAAMC,WAAW,GAAGH,aAAa,CAACR,KAAK,IAAI,EAAE,CAAC;EAE9CR,SAAS,CAAC,MAAM;IACd,IAAI,CAACmB,WAAW,EAAE;IAElB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BN,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QAAA,IAAAO,cAAA;QACF,IAAIC,GAAG,GAAG,eAAeH,WAAW,EAAE;QACtC,IAAIV,GAAG,KAAK,IAAI,EAAE;UAChBa,GAAG,IAAI,QAAQb,GAAG,EAAE;QACtB;QAEA,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAElC,KAAAJ,cAAA,GAAII,IAAI,CAACd,QAAQ,cAAAU,cAAA,eAAbA,cAAA,CAAeK,MAAM,EAAE;UACzBd,WAAW,CAACa,IAAI,CAACd,QAAQ,CAAC;UAC1BI,sBAAsB,CAACY,OAAO,GAAGF,IAAI,CAACd,QAAQ,CAAC,CAAC;QAClD,CAAC,MAAM;UACLiB,OAAO,CAACC,IAAI,CAAC,gDAAgD,CAAC;UAC9DjB,WAAW,CAACG,sBAAsB,CAACY,OAAO,CAAC;QAC7C;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDlB,WAAW,CAACG,sBAAsB,CAACY,OAAO,CAAC,CAAC,CAAC;MAC/C,CAAC,SAAS;QACRb,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDM,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,WAAW,EAAEV,GAAG,CAAC,CAAC;EAEtB,oBACEL,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAErB,QAAQ;MAAEE;IAAQ,CAAE;IAAAN,QAAA,EAChDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,EAAA,CA/CWJ,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAiDzB,OAAO,MAAMgC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,UAAU,CAACM,WAAW,CAAC;AAAA;AAACkC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}