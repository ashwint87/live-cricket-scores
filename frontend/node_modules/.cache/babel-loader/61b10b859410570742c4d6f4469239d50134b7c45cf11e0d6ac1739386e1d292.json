{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/cricket-website/frontend/src/components/HomeWidgets/TopPlayers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/TopPlayers.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopPlayers() {\n  _s();\n  const [playerNames, setPlayerNames] = useState([]);\n  const [playerData, setPlayerData] = useState([]);\n  const navigate = useNavigate();\n\n  // 1. Load top player names from GitHub file\n  useEffect(() => {\n    fetch('/api/default-player-images').then(res => res.text()).then(text => {\n      const names = text.split('\\n').map(n => n.trim()).filter(Boolean);\n      setPlayerNames(names);\n    });\n  }, []);\n\n  // 2. Once names are loaded, find their sportmonks ID and image\n  useEffect(() => {\n    const loadPlayerData = async () => {\n      const results = [];\n      for (const name of playerNames) {\n        var _sportmonksList$data;\n        // 2a. Search sportmonks player list using name to find ID\n        const sportmonksListRes = await fetch(`/api/players`);\n        const sportmonksList = await sportmonksListRes.json();\n        const match = sportmonksList === null || sportmonksList === void 0 ? void 0 : (_sportmonksList$data = sportmonksList.data) === null || _sportmonksList$data === void 0 ? void 0 : _sportmonksList$data.find(p => p.fullname.toLowerCase().trim() === name.toLowerCase().trim());\n        if (match) {\n          const {\n            id,\n            fullname,\n            image_path\n          } = match;\n          results.push({\n            id,\n            name: fullname,\n            image: image_path\n          });\n        }\n      }\n      setPlayerData(results);\n    };\n    if (playerNames.length > 0) {\n      loadPlayerData();\n    }\n  }, [playerNames]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-players-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Top Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-players-grid\",\n      children: playerData.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-player-card\",\n        onClick: () => navigate(`/player/${player.id}`),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: player.image,\n          alt: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(TopPlayers, \"RtwaN5ZfucCtLgAF5spaL0b8xKo=\", false, function () {\n  return [useNavigate];\n});\n_c = TopPlayers;\nvar _c;\n$RefreshReg$(_c, \"TopPlayers\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","TopPlayers","_s","playerNames","setPlayerNames","playerData","setPlayerData","navigate","fetch","then","res","text","names","split","map","n","trim","filter","Boolean","loadPlayerData","results","name","_sportmonksList$data","sportmonksListRes","sportmonksList","json","match","data","find","p","fullname","toLowerCase","id","image_path","push","image","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","player","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/cricket-website/frontend/src/components/HomeWidgets/TopPlayers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/TopPlayers.css';\n\nexport default function TopPlayers() {\n  const [playerNames, setPlayerNames] = useState([]);\n  const [playerData, setPlayerData] = useState([]);\n  const navigate = useNavigate();\n\n  // 1. Load top player names from GitHub file\n  useEffect(() => {\n    fetch('/api/default-player-images')\n      .then(res => res.text())\n      .then(text => {\n        const names = text\n          .split('\\n')\n          .map(n => n.trim())\n          .filter(Boolean);\n        setPlayerNames(names);\n      });\n  }, []);\n\n  // 2. Once names are loaded, find their sportmonks ID and image\n  useEffect(() => {\n    const loadPlayerData = async () => {\n      const results = [];\n\n      for (const name of playerNames) {\n        // 2a. Search sportmonks player list using name to find ID\n        const sportmonksListRes = await fetch(`/api/players`);\n        const sportmonksList = await sportmonksListRes.json();\n        const match = sportmonksList?.data?.find(p => p.fullname.toLowerCase().trim() === name.toLowerCase().trim());\n\n        if (match) {\n          const { id, fullname, image_path } = match;\n          results.push({ id, name: fullname, image: image_path });\n        }\n      }\n\n      setPlayerData(results);\n    };\n\n    if (playerNames.length > 0) {\n      loadPlayerData();\n    }\n  }, [playerNames]);\n\n  return (\n    <div className=\"top-players-container\">\n      <h3>Top Players</h3>\n      <div className=\"top-players-grid\">\n        {playerData.map(player => (\n          <div\n            key={player.id}\n            className=\"top-player-card\"\n            onClick={() => navigate(`/player/${player.id}`)}\n          >\n            <img src={player.image} alt={player.name} />\n            <p>{player.name}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}